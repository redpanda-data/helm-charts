# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Lint and Test Redpanda Charts

on:
  pull_request:
    branches:
      - "**"
    paths:
      - .buildkite/*
      - .github/*.sh
      - .github/ct-redpanda.yaml
      - .github/kind.yaml
      - .github/workflows/pull_requests_redpanda.yaml
      - charts/**
      - 'charts/console/**'
      - 'charts/redpanda/**'
      - '!charts/connectors/**'
      - '!charts/kminion/**'
      - '!charts/operator/**'
      - '!**/*.md'

defaults:
  run:
    shell: nix develop --impure --command bash {0}

jobs:
  lint:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash {0} # Explicit restore the default for jobs not using nix.
    steps:
      - name: Noop
        run: echo noop

  version-and-lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: cachix/install-nix-action@v26
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Redpanda lint
        run: task chart:lint:redpanda

  check-values:
    runs-on: ubuntu-22.04
    steps:
      - uses: cachix/install-nix-action@v26
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: compare redpanda values with main
        run: dyff --color=off -k between -s <(git show 'origin/main:charts/redpanda/values.yaml') charts/redpanda/values.yaml

      - name: compare console values with main
        run: dyff --color=off -k between -s <(git show 'origin/main:charts/console/values.yaml') charts/console/values.yaml

  test:
    name: "${{ matrix.version }}/${{ matrix.testvaluespattern }}: Run ct tests"
    strategy:
      matrix:
        version:
          - ""
          - v23.1.19
        testvaluespattern:
          - '0[1-3]*'
          - '0[4-6]*'
          - '0[7-9]*'
          - '1[0-1]*'
          - '12*'
          - '13*'
          - '14*'
          - '15*'
          - '1[6-7]*'
          - '18*'
      fail-fast: false
    runs-on: ubuntu-22.04
    steps:
      - uses: cachix/install-nix-action@v26
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

        # TODO(chrisseto): Need to start linting generated files here.
        # Currently just testing that generation within CI works but
        # need to fail if the generation results in new diffs.
        # Alternatively, could exclude all generated files from source
        # control and leverage nix to generate files just-in-time and
        # then package them into a usable chart for test?
      - run: task chart:generate:redpanda

      # we're excluding console from testing until we have a way to test it with Redpanda
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} --config .github/ct-redpanda.yaml)
          echo $changed
          if [[ -n "$changed" ]]; then
            echo changed="true" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up for matrix
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          echo bash -O extglob -c "rm -v charts/redpanda/ci/!(${{ matrix.testvaluespattern }})"
          bash -O extglob -c "rm -v charts/redpanda/ci/!(${{ matrix.testvaluespattern }})"

      - name: Create kind cluster
        uses: helm/kind-action@99576bfa6ddf9a8e612d83b513da5a75875caced # v1.9.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          config: .github/kind.yaml

      - name: Check kind config worked
        if: steps.list-changed.outputs.changed == 'true'
        run: kubectl get nodes

      - name: Annotate nodes for rack awareness
        if: steps.list-changed.outputs.changed == 'true'
        run: .github/annotate_kind_nodes.sh chart-testing

    #===== Required Test Files === start

      - name: Create tls helm templates
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          .github/create_tls.sh "random-domain"

      - name: Create sasl secret templates
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          .github/create-sasl-secret.sh "some-users"

      - name: Move files to redpanda template dir
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          mv external-tls-secret.yaml charts/redpanda/templates/
          cp .github/external-service.yaml charts/redpanda/templates/
          mv some-users-updated.yaml charts/redpanda/templates/

    #===== Required Test Files === end

      - name: install cert-manager
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          task helm:install:cert-manager

      - name: install prometheus-operator
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          task helm:install:kube-prometheus-stack

      - name: install metallb
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          task helm:install:metallb

        # Chart-testing requires there to be a branch on the local repository
        # for diffing. This will create such a branch without performing a
        # checkout.
      - name: Fetch origin/main
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          git fetch origin ${{ github.event.repository.default_branch }}:${{ github.event.repository.default_branch }}

      - name: Run chart-testing (install and upgrade)
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          ct install \
            --github-groups \
            --upgrade \
            --config .github/ct-redpanda.yaml \
            --helm-extra-set-args="--set=image.tag=${{ matrix.version }}" \
            --skip-missing-values \
            --chart-dirs=charts/redpanda \
            --target-branch ${{ github.event.repository.default_branch }}

  summary:
    if: always()
    needs:
      - test
    runs-on: ubuntu-22.04
    steps:
      - name: Summarize the results of the test matrix pass/fail
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs)}}
