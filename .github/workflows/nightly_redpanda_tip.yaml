# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is to test only the Redpanda Chart Nightly
name: Nightly - Lint/Test Redpanda-Chart With Nightly Redpanda

on:
  schedule:
    - cron: '0 2 * * 1-5'  # 01:00 AM UTC Monday - Friday
  workflow_dispatch: {}
jobs:
  test-redpanda-nightly:
    name: Run ct tests for ci values matching ${{ matrix.testvaluespattern }} for Redpanda nightly build
    strategy:
      matrix:
        testvaluespattern:
          - '0[1-3]*'
          - '0[4-6]*'
          - '0[7-9]*'
          - '1[0-2]*'
          - '1[3-5]*'
      fail-fast: true
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          git checkout main
          git checkout -

      - name: Set up for matrix
        run: |
          echo bash -O extglob -c "rm -v charts/redpanda/ci/!(${{ matrix.testvaluespattern }})"
          bash -O extglob -c "rm -v charts/redpanda/ci/!(${{ matrix.testvaluespattern }})"

      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20.4'
      - run: go install github.com/joejulian/docker-tag-list@latest

      - name: Get latest nightly tag
        id: latestTag
        run: |
          echo "TAG=$(
            docker-tag-list -c '~0.0.0-0' --latest -r redpandadata/redpanda-nightly | sed 's/-a..64$//'
          )" >> $GITHUB_OUTPUT

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.1

      - name: Set up chart-testing
        uses: joejulian/chart-testing-action@v2.3.1-1
        with:
          version: v3.8.0-1

      - name: Create kind cluster
        uses: helm/kind-action@v1.5.0
        with:
          config: .github/kind.yaml

      - name: Check kind config worked
        run: kubectl get nodes

      - name: Annotate nodes for rack awareness
        run: .github/annotate_kind_nodes.sh chart-testing

    #===== Required Test Files === start

      - name: Create tls helm templates
        run: |
          .github/create_tls.sh "random-domain"

      - name: Create sasl secret templates
        run: |
          .github/create-sasl-secret.sh "some-users"

      - name: Move files to redpanda template dir
        run: |
          mv external-tls-secret.yaml charts/redpanda/templates/
          cp .github/external-service.yaml charts/redpanda/templates/
          mv some-users-updated.yaml charts/redpanda/templates

    #===== Required Test Files === end

      - name: install cert-manager
        run: |
          helm repo add jetstack https://charts.jetstack.io &&
          helm install cert-manager --namespace cert-manager \
            --create-namespace --version v1.11.0 jetstack/cert-manager \
            --set installCRDs=true --wait --wait-for-jobs

      - name: install prometheus-operator
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts &&
          helm install prometheus prometheus-community/kube-prometheus-stack \
            --namespace prometheus --create-namespace \
            --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false \
            --set nodeExporter.enabled=false \
            --set grafana.enabled=false --set kubeStateMetrics.enabled=false --set alertmanager.enabled=false \
            --wait --wait-for-jobs

      - name: install metallb
        run: |
          helm repo add metallb https://metallb.github.io/metallb &&
          helm install metallb metallb/metallb -n metallb-system \
            --create-namespace --version 0.13.10 --wait --wait-for-jobs

      - name: apply metallb resources
        run: |
          kubectl -n metallb-system apply -f .github/metallb-config.yaml

      - name: Run chart-testing install
        run: |
          ct install \
            --github-groups \
            --config .github/ct-redpanda.yaml \
            --helm-extra-set-args="--set=image.tag=${{ steps.latestTag.outputs.TAG }} --set=connectors.enabled=true --set=image.repository=redpandadata/redpanda-nightly" \
            --skip-missing-values