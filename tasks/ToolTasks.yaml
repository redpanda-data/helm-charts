---
version: '3'

vars:
  BINDIR: '{{.BINDIR | default ".local/bin"}}'

  # Tool Versions
  CLUSTERAWSADM_VERSION: v2.0.2
  CLUSTERCTL_VERSION: v1.4.3
  SUPPORT_BUNDLE_VERSION: v0.62.1
  CREDS_FILE: '{{.SRC_DIR}}/gcp/creds.json'

run: once

tasks:
  mklocal:
    internal: true
    cmds:
      - mkdir -p {{.BINDIR}}
    status:
      - test -d .local
      - test -d {{.BINDIR}}

  clusterawsadm:
    deps: [mklocal]
    cmds:
      - echo "~~~ Installing clusterawsadm"
      - curl -Ls https://github.com/kubernetes-sigs/cluster-api-provider-aws/releases/download/{{.CLUSTERAWSADM_VERSION}}/clusterawsadm-{{OS}}-{{ARCH}} -o {{.BINDIR}}/clusterawsadm-{{.CLUSTERAWSADM_VERSION}}
      - chmod 0775 {{.BINDIR}}/clusterawsadm-{{.CLUSTERAWSADM_VERSION}}
      - ln -sf clusterawsadm-{{.CLUSTERAWSADM_VERSION}} {{.BINDIR}}/clusterawsadm
    status:
      - test -f {{.BINDIR}}/clusterawsadm-{{.CLUSTERAWSADM_VERSION}}

  clusterctl:
    deps: [mklocal]
    cmds:
      - echo "~~~ Installing clusterctl"
      - curl -Ls https://github.com/kubernetes-sigs/cluster-api/releases/download/{{.CLUSTERCTL_VERSION}}/clusterctl-{{OS}}-{{ARCH}} -o {{.BINDIR}}/clusterctl-{{.CLUSTERCTL_VERSION}}
      - chmod 0775 {{.BINDIR}}/clusterctl-{{.CLUSTERCTL_VERSION}}
      - ln -sf clusterctl-{{.CLUSTERCTL_VERSION}} {{.BINDIR}}/clusterctl
    status:
      - test -f {{.BINDIR}}/clusterctl-{{.CLUSTERCTL_VERSION}}

  aws:
    deps: [mklocal]
    env:
      TEMPDIR:
        sh: mktemp -d
    cmds:
      - echo '~~~ Installing aws cli'
      - curl -Ls "https://awscli.amazonaws.com/awscli-exe-{{OS}}-x86_64.zip" -o "/tmp/awscliv2.zip"
      - unzip -q -d "$TEMPDIR" /tmp/awscliv2.zip
      - "${TEMPDIR}/aws/install --bin-dir $(realpath .local/bin) --install-dir $(realpath .local/aws-cli)"
    status:
      - test -f {{.BINDIR}}/aws

  support-bundle:
    deps: [mklocal]
    cmds:
      - echo '~~~ Installing support bundle'
      - curl -Ls https://github.com/replicatedhq/troubleshoot/releases/download/{{.SUPPORT_BUNDLE_VERSION}}/support-bundle_{{OS}}_{{ARCH}}.tar.gz | tar xz -C {{.BINDIR}} support-bundle  --transform 's@$@-{{.SUPPORT_BUNDLE_VERSION}}@'
      - ln -s support-bundle-{{.SUPPORT_BUNDLE_VERSION}} {{.BINDIR}}/support-bundle
    status:
      - test -f {{.BINDIR}}/support-bundle-{{.SUPPORT_BUNDLE_VERSION}}

  gcloud:
    cmds:
      - echo '~~~ Installing gcloud'
      - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-433.0.0-{{OS}}-x86_64.tar.gz
      - tar -xf google-cloud-cli-433.0.0-{{OS}}-x86_64.tar.gz
      - ./google-cloud-sdk/install.sh --usage-reporting=false --quiet --path-update=true
      - "ln -s $(realpath ./google-cloud-sdk/bin/gcloud) {{.BINDIR}}/gcloud"
      - "ln -s $(realpath ./google-cloud-sdk/bin/gsutil) {{.BINDIR}}/gsutil"
    status:
      - test $(gcloud version &>/dev/null; echo $?)

  gcloud-auth-plugin:
    deps:
      - gcloud
    cmds:
      - echo '~~~ Installing gcloud auth plugin'
      - gcloud components install gke-gcloud-auth-plugin --quiet
    status:
      - test $(gke-gcloud-auth-plugin --version &>/dev/null; echo $?)

  auth-gcp:
    deps:
      - gcloud
    cmds:
      - echo '~~~ Authorising against GCP'
      - mkdir -p '{{.SRC_DIR}}/gcp'
      - echo "$GCP_B64ENCODED_CREDENTIALS" | base64 -d > '{{.CREDS_FILE}}'
      - gcloud auth activate-service-account --key-file='{{.CREDS_FILE}}'
    status:
      # Only run this in CI
      - sh -c '[ ! "$CI" = true ]'
