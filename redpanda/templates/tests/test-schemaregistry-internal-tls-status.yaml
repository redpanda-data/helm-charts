{{/*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}
{{- $anyTLS :=  default false .Values.config.schema_registry.schema_registry_api_tls -}}
{{- $anySASL := default false .Values.config.redpanda.enable_sasl }}
{{- if and $anyTLS (not $anySASL) }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "redpanda.fullname" . }}-test-schemaregistry-internal-tls-status"
  namespace: {{ .Release.Namespace | quote }}
  labels:
    helm.sh/chart: {{ template "redpanda.chart" . }}
    app.kubernetes.io/name: {{ template "redpanda.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/component: {{ template "redpanda.name" . }}
  {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  restartPolicy: Never
  containers:
    - name: {{ template "redpanda.name" . }}
      image: {{ .Values.image.repository }}:{{ .Values.image.tag }} 
      command: ['curl']
      args: ["-v","-m","3","--ssl-reqd","--cacert","/etc/tls/certs/schema-registry/ca.crt","{{ template "redpanda.name" . }}-0.{{ include "redpanda.internal.domain" . }}:{{ template "redpanda.schemaregistry.internal.port" $ }}/subjects"]
      volumeMounts:
        - name: {{ template "redpanda.fullname" . }}
          mountPath: /tmp/base-config 
        - name: tlscert
          mountPath: /etc/tls/certs
        - name: tlsadmincert
          mountPath: /etc/tls/certs/admin
        - name: tlspandaproxycert
          mountPath: /etc/tls/certs/pandaproxy
        - name: tlsschemaregistrycert
          mountPath: /etc/tls/certs/schema-registry
  volumes:
    - name: {{ template "redpanda.fullname" . }}
      configMap:
        name: {{ template "redpanda.fullname" . }}
    - name: config
      emptyDir: {}
    - name: tlscert
      secret:
        defaultMode: 420
        items:
        - key: tls.key
          path: tls.key
        - key: tls.crt
          path: tls.crt
        - key: ca.crt
          path: ca.crt
        secretName: {{ template "redpanda.fullname" . }}-kafka-cert
    - name: tlsadmincert
      secret:
        defaultMode: 420
        items:
        - key: tls.key
          path: tls.key
        - key: tls.crt
          path: tls.crt
        - key: ca.crt
          path: ca.crt
        secretName: {{ template "redpanda.fullname" . }}-admin-cert
    - name: tlspandaproxycert
      secret:
        defaultMode: 420
        items:
        - key: tls.key
          path: tls.key
        - key: tls.crt
          path: tls.crt
        - key: ca.crt
          path: ca.crt
        secretName: {{ template "redpanda.fullname" . }}-proxy-cert
    - name: tlsschemaregistrycert
      secret:
        defaultMode: 420
        items:
        - key: tls.key
          path: tls.key
        - key: tls.crt
          path: tls.crt
        - key: ca.crt
          path: ca.crt
        secretName: {{ template "redpanda.fullname" . }}-schema-cert
{{- end }}
