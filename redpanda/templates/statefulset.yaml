{{/*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "redpanda.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    helm.sh/chart: {{ template "redpanda.chart" . }}
    app.kubernetes.io/name: {{ template "redpanda.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/component: {{ template "redpanda.name" . }}
  {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "redpanda.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ template "redpanda.fullname" . }}
  replicas: {{ .Values.statefulset.replicas | int64 }}
  updateStrategy: {{- toYaml .Values.statefulset.updateStrategy | nindent 4 }}
  podManagementPolicy: {{ .Values.statefulset.podManagementPolicy | quote }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "redpanda.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/component: {{ template "redpanda.name" . }}
      {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.statefulset.annotations }}
      annotations: {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ template "redpanda.name" . }}-configurator
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          command: ["/bin/sh", "-c"]
          args:
            - >
              CONFIG=/etc/redpanda/redpanda.yaml;
              NODE_ID=${HOSTNAME##*-};
              SERVICE_NAME={{ template "redpanda.fullname" . }}-$NODE_ID.{{ template "redpanda.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }};
              cp /tmp/base-config/redpanda.yaml $CONFIG;
              rpk --config $CONFIG config set redpanda.node_id $NODE_ID;
              if [ "$NODE_ID" = "0" ]; then
                rpk --config $CONFIG config set redpanda.seed_servers '[]' --format yaml;
              fi;
              rpk --config $CONFIG config set redpanda.advertised_rpc_api.address $SERVICE_NAME;
              rpk --config $CONFIG config set redpanda.advertised_rpc_api.port {{ .Values.config.redpanda.rpc_server.port }};
              rpk --config $CONFIG config set redpanda.advertised_kafka_api.address $SERVICE_NAME;
              rpk --config $CONFIG config set redpanda.advertised_kafka_api.port  {{ .Values.config.redpanda.kafka_api.port }};
          volumeMounts:
            - name: {{ template "redpanda.fullname" . }}
              mountPath: /tmp/base-config 
            - name: config
              mountPath: /etc/redpanda
          resources:
            {{- toYaml .Values.statefulset.resources | nindent 12 }}
      containers:
        - name: {{ template "redpanda.name" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          args:
            - >
              --check=false
              --smp {{ .Values.statefulset.resources.limits.cpu }}
              --memory {{ template "redpanda.parseMemory" . }}
              start
              --
              --default-log-level={{ .Values.config.seastar.default_log_level }}
              --reserve-memory 0M
          ports:
            - containerPort: {{ .Values.config.redpanda.admin.port }}
              name: admin
            - containerPort: {{ .Values.config.redpanda.kafka_api.port }}
              name: kafka
            - containerPort: {{ .Values.config.redpanda.rpc_server.port }}
              name: rpc
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/redpanda/data
            - name: config
              mountPath: /etc/redpanda
          resources:
            {{- toYaml .Values.statefulset.resources | nindent 12 }}
      volumes:
        - name: datadir
        {{- if .Values.storage.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: datadir
        {{- else if .Values.storage.hostPath }}
          hostPath:
            path: {{ .Values.storage.hostPath | quote }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: {{ template "redpanda.fullname" . }}
          configMap:
            name: {{ template "redpanda.fullname" . }}
        - name: config
          emptyDir: {}
      {{- if or .Values.statefulset.nodeAffinity .Values.statefulset.podAffinity .Values.statefulset.podAntiAffinity }}
      affinity:
      {{- with .Values.statefulset.nodeAffinity }}
        nodeAffinity: {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .Values.statefulset.podAffinity }}
        podAffinity: {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- if .Values.statefulset.podAntiAffinity }}
        podAntiAffinity:
        {{- if .Values.statefulset.podAntiAffinity.type }}
        {{- if eq .Values.statefulset.podAntiAffinity.type "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: {{ .Values.statefulset.podAntiAffinity.topologyKey }}
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ template "redpanda.name" . }}
                  app.kubernetes.io/instance: {{ .Release.Name | quote }}
        {{- else if eq .Values.statefulset.podAntiAffinity.type "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.statefulset.podAntiAffinity.weight | int64 }}
              podAffinityTerm:
                topologyKey: {{ .Values.statefulset.podAntiAffinity.topologyKey }}
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: {{ template "redpanda.name" . }}
                    app.kubernetes.io/instance: {{ .Release.Name | quote }}
        {{- end }}
        {{- else }}
          {{- toYaml .Values.statefulset.podAntiAffinity | nindent 10 }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- if semverCompare ">=1.16-0" .Capabilities.KubeVersion.GitVersion }}
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/name: {{ template "redpanda.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name | quote }}
      {{- with .Values.statefulset.topologySpreadConstraints }}
        maxSkew: {{ .maxSkew }}
        topologyKey: {{ .topologyKey }}
        whenUnsatisfiable: {{ .whenUnsatisfiable }}
      {{- end }}
    {{- end }}
    {{- with .Values.statefulset.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.statefulset.priorityClassName }}
      priorityClassName: {{ .Values.statefulset.priorityClassName }}
    {{- end }}
    {{- with .Values.statefulset.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if .Values.storage.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app.kubernetes.io/name: {{ template "redpanda.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name | quote }}
          app.kubernetes.io/component: {{ template "redpanda.name" . }}
        {{- with .Values.storage.persistentVolume.labels }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.labels }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.storage.persistentVolume.annotations }}
        annotations: {{- toYaml . | nindent 10 }}
      {{- end }}
      spec:
        accessModes: ["ReadWriteOnce"]
      {{- if .Values.storage.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.storage.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: {{ .Values.storage.persistentVolume.storageClass | quote}}
      {{- end }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.storage.persistentVolume.size | quote }}
{{- end }}
