# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# values.yaml
#
# This file contains values for variables referenced from yaml files in the templates directory.
#
# For further information on Helm templating see the documentation at:
#   https://helm.sh/docs/chart_template_guide/values_files/
#
# For an explanation of Redpanda configuration values:
#   https://vectorized.io/docs/advanced-configuration/

image:
  repository: vectorized/redpanda
  # The imagePullPolicy will default to Always when the tag is 'latest'
  tag: v21.11.11

# Additional labels to apply to all Kubernetes resources created by this chart.
labels: {}
  # app.kubernetes.io/part-of: my-app

clusterDomain: cluster.local

# See https://vectorized.io/docs/configuration/
config:
  # If you have a license key please set it here or you can request one
  # here: https://vectorized.io/redpanda
  license_key: ""

  # Update with your organization name
  organization: ""

  redpanda:
    enable_sasl: false
    admin:
      # The port for the admin server.
      #
      # Metrics are served off of this port at /metrics.
      port: 9644
      address: 0.0.0.0
      name: admin
      external:
        enabled: false

    # Kafka API listeners
    # The first entry is used to set up the headless service.
    # Kafka external and internal advertised listeners will be
    # derived from the configuration. External advertised listener will be via
    # node port unless load balancer is configured.
    kafka_api:
      - name: kafka
        address: $(POD_IP)
        port: 9092
        external:
          enabled: true
          subdomain: "streaming.rockdata.io"

    # rpc server listener
    rpc_server:
      address: 0.0.0.0
      port: 33145
      external:
        enabled: false

  # panda proxy (listener)
  pandaproxy:
    pandaproxy_api:
    - address: 0.0.0.0
      name: internal
      port: 8082
      external:
        enabled: true

  schema_registry:
    schema_registry_api:
    - address: "0.0.0.0"
      name: schema-registry
      port: 8081
      external:
        enabled: true

  rpk:
    # Enables memory locking.
    enable_memory_locking: false

    # Send usage stats back to vectorized
    enable_usage_stats: true

    # This should be set to true unless with have CPU affinity
    # https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy
    #
    # Equivalent to passing the following to redpanda
    # --idle-poll-time-us 0 --thread-affinity 0 --poll-aio 0
    overprovisioned: true

    # Increases the number of allowed asynchronous IO events
    tune_aio_events: false

    # Syncs NTP
    tune_clocksource: false

    # Installs a custom script to process coredumps and save them to the given directory.
    tune_coredump: false

    # Disables hyper-threading, sets the ACPI-cpufreq governor to 'performance'. Additionaly
    # if system reboot is allowed: disables Intel P-States, disables Intel C-States,
    # disables Turbo Boost
    #
    # This is not possible to set to true while running in a container.
    tune_cpu: false

    # Distributes IRQs across cores with the method deemed the most appropriate for the
    # current device type (i.e. NVMe)
    #
    # This is not possible to set to true while running in a container.
    tune_disk_irq: false

  seastar:
    default_log_level: info

statefulset:
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  budget:
    maxUnavailable: 1

  # Additional annotations to apply to the Pods of this StatefulSet.
  annotations: {}

  # Redpanda makes use of a thread per core model which is described here:
  # https://vectorized.io/blog/tpc-buffers/ For this reason Redpanda should
  # only be given full cores for requests and limits. The recommendation
  # for memory for Redpanda is at least 2GB per core. These values will also
  # affect the --smp and --memory flags which are passed to Redpanda.
  #
  # Limits are only specified as to provide Guaranteed QoS:
  # https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/#create-a-pod-that-gets-assigned-a-qos-class-of-guaranteed
  #
  # To improve performance further it is recommended to enable CPU Affinity:
  # https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy
  #
  # NOTE: You can increase the number of cores but decreasing the number
  # is not supported currently.
  # https://github.com/vectorizedio/redpanda/issues/350#
  resources:
    limits:
      cpu: 1
      memory: 2Gi

  # Inter-Pod Affinity rules for scheduling Pods of this StatefulSet.
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  podAffinity: {}
  # Anti-affinity rules for scheduling Pods of this StatefulSet.
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  # You may either toggle options below for default anti-affinity rules,
  # or specify the whole set of anti-affinity rules instead of them.
  podAntiAffinity:
    # The topologyKey to be used.
    # Can be used to spread across different nodes, AZs, regions etc.
    topologyKey: kubernetes.io/hostname
    # Type of anti-affinity rules: either `soft`, `hard` or empty value (which
    # disables anti-affinity rules).
    type: soft
    # Weight for `soft` anti-affinity rules.
    # Does not apply for other anti-affinity types.
    weight: 100
  # Node selection constraints for scheduling Pods of this StatefulSet.
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}

  # PriorityClassName given to Pods of this StatefulSet
  # https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  priorityClassName: ""

  # Taints to be tolerated by Pods of this StatefulSet.
  # https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
  topologySpreadConstraints:
    maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# When using persistent storage the volume will be mounted as root. In order for redpanda to use the volume
# we must set the fsGroup to the uid of redpanda, which is 101
podSecurityContext:
  fsGroup: 101

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


storage:
  # Absolute path on host to store Redpanda's data.
  # If not specified, then `emptyDir` will be used instead.
  # If specified, but `persistentVolume.enabled` is `true`, then has no effect.
  hostPath: ""

  # If `enabled` is `true` then a PersistentVolumeClaim will be created and
  # used to store Redpanda's data, otherwise `hostPath` is used.
  persistentVolume:
    enabled: true

    size: 100Gi

    # If defined, then `storageClassName: <storageClass>`.
    # If set to "-", then `storageClassName: ""`, which disables dynamic
    # provisioning.
    # If undefined or empty (default), then no `storageClassName` spec is set,
    # so the default provisioner will be chosen (gp2 on AWS, standard on
    # GKE, AWS & OpenStack).
    storageClass: ""

    # Additional labels to apply to the created PersistentVolumeClaims.
    labels: {}
    # Additional annotations to apply to the created PersistentVolumeClaims.
    annotations: {}
