//go:build !generate

// +gotohelm:ignore=true
//
// Code generated by genpartial DO NOT EDIT.
package connectors

import (
	monitoringv1 "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring/v1"
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/api/resource"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type PartialValues struct {
	NameOverride     *string                       "json:\"nameOverride,omitempty\""
	FullnameOverride *string                       "json:\"fullnameOverride,omitempty\""
	CommonLabels     map[string]string             "json:\"commonLabels,omitempty\""
	Tolerations      []corev1.Toleration           "json:\"tolerations,omitempty\""
	Image            *PartialImage                 "json:\"image,omitempty\""
	ImagePullSecrets []corev1.LocalObjectReference "json:\"imagePullSecrets,omitempty\""
	Test             *PartialCreatable             "json:\"test,omitempty\""
	Connectors       *PartialConnectors            "json:\"connectors,omitempty\""
	Auth             *PartialAuth                  "json:\"auth,omitempty\""
	Logging          *PartialLogging               "json:\"logging,omitempty\""
	Monitoring       *PartialMonitoringConfig      "json:\"monitoring,omitempty\""
	Container        *PartialContainer             "json:\"container,omitempty\""
	Deployment       *PartialDeploymentConfig      "json:\"deployment,omitempty\""
	Storage          *PartialStorage               "json:\"storage,omitempty\""
	ServiceAccount   *PartialServiceAccountConfig  "json:\"serviceAccount,omitempty\""
	Service          *PartialServiceConfig         "json:\"service,omitempty\""
}

type PartialImage struct {
	Repository *string            "json:\"repository,omitempty\""
	PullPolicy *corev1.PullPolicy "json:\"pullPolicy,omitempty\""
	Tag        *string            "json:\"tag,omitempty\""
}

type PartialCreatable struct {
	Create *bool "json:\"create,omitempty\""
}

type PartialConnectors struct {
	RestPort                *int32                    "json:\"restPort,omitempty\""
	BootstrapServers        *string                   "json:\"bootstrapServers,omitempty\""
	SchemaRegistryURL       *string                   "json:\"schemaRegistryURL,omitempty\""
	AdditionalConfiguration *string                   "json:\"additionalConfiguration,omitempty\""
	SecretManager           *PartialSecretManager     "json:\"secretManager,omitempty\""
	ProducerBatchSize       *int32                    "json:\"producerBatchSize,omitempty\""
	ProducerLingerMS        *int32                    "json:\"producerLingerMS,omitempty\""
	Storage                 *PartialConnectorsStorage "json:\"storage,omitempty\""
	GroupID                 *string                   "json:\"groupID,omitempty\""
	BrokerTLS               *PartialTLS               "json:\"brokerTLS,omitempty\""
}

type PartialAuth struct {
	SASL *struct {
		Enabled   *bool   "json:\"enabled,omitempty\""
		Mechanism *string "json:\"mechanism,omitempty\""
		SecretRef *string "json:\"secretRef,omitempty\""
		UserName  *string "json:\"userName,omitempty\""
	} "json:\"sasl,omitempty\""
}

type PartialLogging struct {
	Level *string "json:\"level,omitempty\""
}

type PartialMonitoringConfig struct {
	Enabled           *bool                           "json:\"enabled,omitempty\""
	ScrapeInterval    *metav1.Duration                "json:\"scrapeInterval,omitempty\""
	Labels            map[string]string               "json:\"labels,omitempty\""
	Annotations       map[string]string               "json:\"annotations,omitempty\""
	NamespaceSelector *monitoringv1.NamespaceSelector "json:\"namespaceSelector,omitempty\""
}

type PartialContainer struct {
	SecurityContext *corev1.SecurityContext "json:\"securityContext,omitempty\""
	Resources       *struct {
		Request         corev1.ResourceList "json:\"request,omitempty\""
		Limits          corev1.ResourceList "json:\"limits,omitempty\""
		JavaMaxHeapSize *resource.Quantity  "json:\"javaMaxHeapSize,omitempty\""
	} "json:\"resources,omitempty\""
	JavaGCLogEnabled *string "json:\"javaGCLogEnabled,omitempty\""
}

type PartialDeploymentConfig struct {
	Replicas      *int32                     "json:\"replicas,omitempty\""
	Create        *bool                      "json:\"create,omitempty\""
	Command       []string                   "json:\"command,omitempty\""
	Strategy      *appsv1.DeploymentStrategy "json:\"strategy,omitempty\""
	SchedulerName *string                    "json:\"schedulerName,omitempty\""
	Budget        *struct {
		MaxUnavailable *int32 "json:\"maxUnavailable,omitempty\""
	} "json:\"budget,omitempty\""
	Annotations             map[string]string      "json:\"annotations,omitempty\""
	LivenessProbe           *corev1.Probe          "json:\"livenessProbe,omitempty\""
	ReadinessProbe          *corev1.Probe          "json:\"readinessProbe,omitempty\""
	ExtraEnv                []corev1.EnvVar        "json:\"extraEnv,omitempty\""
	ExtraEnvFrom            []corev1.EnvFromSource "json:\"extraEnvFrom,omitempty\""
	ProgressDeadlineSeconds *int32                 "json:\"progressDeadlineSeconds,omitempty\""
	RevisionHistoryLimit    *int32                 "json:\"revisionHistoryLimit,omitempty\""
	PodAffinity             *corev1.PodAffinity    "json:\"podAffinity,omitempty\""
	NodeAffinity            *corev1.NodeAffinity   "json:\"nodeAffinity,omitempty\""
	PodAntiAffinity         *struct {
		TopologyKey *string                 "json:\"topologyKey,omitempty\""
		Type        *string                 "json:\"type,omitempty\""
		Weight      *int32                  "json:\"weight,omitempty\""
		Custom      *corev1.PodAntiAffinity "json:\"custom,omitempty\""
	} "json:\"podAntiAffinity,omitempty\""
	NodeSelector                  map[string]string                 "json:\"nodeSelector,omitempty\""
	PriorityClassName             *string                           "json:\"priorityClassName,omitempty\""
	Tolerations                   []corev1.Toleration               "json:\"tolerations,omitempty\""
	TopologySpreadConstraints     []corev1.TopologySpreadConstraint "json:\"topologySpreadConstraints,omitempty\""
	SecurityContext               *corev1.PodSecurityContext        "json:\"securityContext,omitempty\""
	TerminationGracePeriodSeconds *int64                            "json:\"terminationGracePeriodSeconds,omitempty\""
	RestartPolicy                 *corev1.RestartPolicy             "json:\"restartPolicy,omitempty\""
}

type PartialStorage struct {
	Volume       []corev1.Volume      "json:\"volume,omitempty\""
	VolumeMounts []corev1.VolumeMount "json:\"volumeMounts,omitempty\""
}

type PartialServiceAccountConfig struct {
	Create      *bool             "json:\"create,omitempty\""
	Annotations map[string]string "json:\"annotations,omitempty\""
	Name        *string           "json:\"name,omitempty\""
}

type PartialServiceConfig struct {
	Annotations map[string]string "json:\"annotations,omitempty\""
	Name        *string           "json:\"name,omitempty\""
	Ports       []struct {
		Name *string "json:\"name,omitempty\""
		Port *int32  "json:\"port,omitempty\""
	} "json:\"ports,omitempty\""
}

type PartialSecretManager struct {
	Enabled          *bool   "json:\"enabled,omitempty\""
	Region           *string "json:\"region,omitempty\""
	ConsolePrefix    *string "json:\"consolePrefix,omitempty\""
	ConnectorsPrefix *string "json:\"connectorsPrefix,omitempty\""
}

type PartialConnectorsStorage struct {
	ReplicationFactor *struct {
		Offset *int32 "json:\"offset,omitempty\""
		Config *int32 "json:\"config,omitempty\""
		Status *int32 "json:\"status,omitempty\""
	} "json:\"replicationFactor,omitempty\""
	Remote *struct {
		Read *struct {
			Offset *bool "json:\"offset,omitempty\""
			Config *bool "json:\"config,omitempty\""
			Status *bool "json:\"status,omitempty\""
		} "json:\"read,omitempty\""
		Write *struct {
			Offset *bool "json:\"offset,omitempty\""
			Config *bool "json:\"config,omitempty\""
			Status *bool "json:\"status,omitempty\""
		} "json:\"write,omitempty\""
	} "json:\"remote,omitempty\""
	Topic *struct {
		Offset *string "json:\"offset,omitempty\""
		Config *string "json:\"config,omitempty\""
		Status *string "json:\"status,omitempty\""
	} "json:\"topic,omitempty\""
}

type PartialTLS struct {
	Enabled *bool "json:\"enabled,omitempty\""
	CA      *struct {
		SecretRef           *string "json:\"secretRef,omitempty\""
		SecretNameOverwrite *string "json:\"secretNameOverwrite,omitempty\""
	} "json:\"ca,omitempty\""
	Cert *struct {
		SecretRef           *string "json:\"secretRef,omitempty\""
		SecretNameOverwrite *string "json:\"secretNameOverwrite,omitempty\""
	} "json:\"cert,omitempty\""
	Key *struct {
		SecretRef           *string "json:\"secretRef,omitempty\""
		SecretNameOverwrite *string "json:\"secretNameOverwrite,omitempty\""
	} "json:\"key,omitempty\""
}
