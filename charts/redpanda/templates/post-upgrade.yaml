{{/*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}
{{- if .Values.post_upgrade_job.enabled }}
{{- $rpkFlags := include "rpk-flags-no-sasl" . }}
{{- $sasl := .Values.auth.sasl }}
{{- $root := deepCopy . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "redpanda.fullname" . }}-post-upgrade
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{- with include "full.labels" . }}
  {{- . | nindent 4 }}
{{- end }}
{{- with .Values.post_upgrade_job.labels }}
  {{- toYaml . | nindent 4 }}
{{- end }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "-5"
{{- with .Values.post_upgrade_job.annotations }}
  {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/name: {{ template "redpanda.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/component: {{ (include "redpanda.name" .) | trunc 50  }}-post-upgrade
{{- with .Values.commonLabels }}
  {{- toYaml . | nindent 8 }}
{{- end }}
    spec:
    {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
    {{- end }}
      restartPolicy: Never
      securityContext: {{ include "pod-security-context" . | nindent 8 }}
      serviceAccountName: {{ include "redpanda.serviceAccountName" . }}
      containers:
      - name: {{ template "redpanda.name" . }}-post-upgrade
        image: {{ .Values.image.repository }}:{{ template "redpanda.tag" . }}
        command: ["/bin/sh", "-c"]
        args:
          - |
            rpk cluster config import -f /tmp/base-config/bootstrap.yaml {{ $rpkFlags }}
{{- range $key, $value := .Values.config.cluster }}
  {{- if $value }}
            rpk cluster config set {{ $key }} {{ $value }} {{ $rpkFlags }}
  {{- end }}
{{- end }}
{{- if not (hasKey .Values.config.cluster "storage_min_free_bytes") }}
            rpk cluster config set storage_min_free_bytes {{ include "storage-min-free-bytes" . }} {{ $rpkFlags }}
{{- end }}
        {{- with .Values.post_upgrade_job.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext: {{ include "container-security-context" . | nindent 10 }}
        {{- if .Values.post_upgrade_job.extraEnv }}
        env:
          {{- include "common.tplvalues.render" (dict "value" .Values.post_upgrade_job.extraEnv "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.post_upgrade_job.extraEnvFrom }}
        envFrom:
          {{- include "common.tplvalues.render" (dict "value" .Values.post_upgrade_job.extraEnvFrom "context" $) | nindent 10 }}
        {{- end }}
        volumeMounts:
          - name: {{ template "redpanda.fullname" . }}
            mountPath: /tmp/base-config
          - name: config
            mountPath: /etc/redpanda
{{- if (include "tls-enabled" . | fromJson).bool }}
  {{- range $name, $cert := .Values.tls.certs }}
          - name: redpanda-{{ $name }}-cert
            mountPath: {{ printf "/etc/tls/certs/%s" $name }}
  {{- end }}
{{- end }}
          {{- if and $sasl.enabled (not (empty $sasl.secretRef )) }}
          - name: {{ $sasl.secretRef }}
            mountPath: "/etc/secrets/users"
            readOnly: true
          {{- end}}
      volumes:
        - name: {{ template "redpanda.fullname" . }}
          configMap:
            name: {{ template "redpanda.fullname" . }}
        - name: config
          emptyDir: {}
{{- if (include "tls-enabled" . | fromJson).bool }}
  {{- range $name, $cert := .Values.tls.certs }}
    {{- $r :=  set $root "tempCert" ( dict "name" $name "cert" $cert ) }}
        - name: redpanda-{{ $name }}-cert
          secret:
            defaultMode: 420
            items:
            - key: tls.key
              path: tls.key
            - key: tls.crt
              path: tls.crt
    {{- if $cert.caEnabled }}
            - key: ca.crt
              path: ca.crt
    {{- end }}
            secretName: {{ template "cert-secret-name" $r }}
  {{- end }}
{{- end -}}
        {{- if and $sasl.enabled (not (empty $sasl.secretRef )) }}
        - name: {{ $sasl.secretRef }}
          secret:
            secretName: {{ $sasl.secretRef }}
            optional: false
        {{- end }}
{{- end }}
