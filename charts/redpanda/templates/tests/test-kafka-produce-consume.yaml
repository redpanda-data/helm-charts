{{/*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}
{{- $sasl := .Values.auth.sasl }}
{{- $root := deepCopy . }}
{{- $rpk := deepCopy . }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "redpanda.fullname" . }}-test-kafka-produce-consume
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{- with include "full.labels" . }}
  {{- . | nindent 4 }}
{{- end }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  restartPolicy: Never
  securityContext:
    runAsUser: 65535
    runAsGroup: 65535
  {{- with .Values.imagePullSecrets }}
  imagePullSecrets: {{- toYaml . | nindent 4 }}
  {{- end }}
  containers:
    - name: {{ template "redpanda.name" . }}
      image: {{ .Values.image.repository }}:{{ template "redpanda.tag" . }}
      env:
        - name: REDPANDA_BROKERS
          value: "{{ include "redpanda.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain | trimSuffix "." }}:{{ .Values.listeners.kafka.port }}"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      command:
        - /usr/bin/timeout
        - "120"
        - bash
        - -c
        - |
          set -e
{{- $cloudStorageFlags := "" }}
{{- if and (include "is-licensed" . | fromJson).bool .Values.storage.tieredConfig.cloud_storage_enabled }}
  {{- $cloudStorageFlags = "-c retention.bytes=80 -c segment.bytes=40 -c redpanda.remote.read=true -c redpanda.remote.write=true"}}
{{- end }}
{{- if $sasl.enabled }}
          until rpk topic create produce.consume.test.$POD_NAME {{ include "rpk-topic-flags" . }} {{ $cloudStorageFlags }}
            do sleep 2
          done
          {{- range $i := until 100 }}
          echo "Pandas are awesome!" | rpk topic produce produce.consume.test.$POD_NAME {{ include "rpk-topic-flags" $ }}
          {{- end }}
          sleep 2
          rpk topic consume produce.consume.test.$POD_NAME -n 1 {{ include "rpk-topic-flags" . }} | grep "Pandas are awesome!"
          rpk topic delete produce.consume.test.$POD_NAME {{ include "rpk-topic-flags" . }}
{{- end }}
      volumeMounts:
        - name: config
          mountPath: /etc/redpanda
{{- if (include "tls-enabled" . | fromJson).bool -}}
  {{- range $name, $cert := .Values.tls.certs }}
        - name: redpanda-{{ $name }}-cert
          mountPath: {{ printf "/etc/tls/certs/%s" $name }}
  {{- end }}
{{- end }}
{{- if $sasl.enabled }}
        - name: {{ $sasl.secretRef }}
          mountPath: "/etc/secrets/users"
          readOnly: true
{{- end}}
      resources: {{ toYaml .Values.statefulset.resources | nindent 12 }}
  volumes:
    - name: {{ template "redpanda.fullname" . }}
      configMap:
        name: {{ template "redpanda.fullname" . }}
    - name: config
      emptyDir: {}
{{- if $sasl.enabled }}
    - name: {{ $sasl.secretRef }}
      secret:
        secretName: {{ $sasl.secretRef }}
        optional: false
{{- end }}
{{- if (include "tls-enabled" . | fromJson).bool }}
  {{- range $name, $cert := .Values.tls.certs }}
    {{- $r :=  set $root "tempCert" ( dict "name" $name "cert" $cert ) }}
    - name: redpanda-{{ $name }}-cert
      secret:
        defaultMode: 0644
        secretName: {{ template "cert-secret-name" $r }}
  {{- end }}
{{- end -}}
