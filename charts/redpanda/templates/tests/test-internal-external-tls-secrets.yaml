{{/*
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}
{{- if and .Values.tests.enabled (include "tls-enabled" . | fromJson).bool ( eq .Values.external.type "NodePort" ) }}
  {{- $values := .Values }}
  {{- $root := deepCopy . }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "redpanda.fullname" . }}-test-internal-externals-cert-secrets
  namespace: {{ .Release.Namespace | quote }}
  labels:
  {{- with include "full.labels" . }}
    {{- . | nindent 4 }}
  {{- end }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  restartPolicy: Never
  securityContext: {{ include "pod-security-context" . | nindent 4 }}
  {{- with .Values.imagePullSecrets }}
  imagePullSecrets: {{- toYaml . | nindent 4 }}
  {{- end }}
  containers:
    - name: {{ template "redpanda.name" . }}
      image: {{ .Values.image.repository }}:{{ template "redpanda.tag" . }}
      command:
        - bash
        - -c
        - |
          set -x

          retry() {
            local retries="$1"
            local command="$2"

            # Run the command, and save the exit code
            bash -c $command
            local exit_code=$?

            # If the exit code is non-zero (i.e. command failed), and we have not
            # reached the maximum number of retries, run the command again
            if [[ $exit_code -ne 0 && $retries -gt 0 ]]; then
              retry $(($retries - 1)) "$command"
              else
              # Return the exit code from the command
              return $exit_code
            fi
          }

    {{- range $name, $cert := $values.tls.certs }}
      {{- if $cert.secretRef }}
          echo testing cert: {{ $name | quote }}

        {{- if eq $cert.secretRef.name "internal-tls-secret" }}
          echo "---> testing internal tls"
          retry 5 'openssl s_client -verify_return_error -prexit
          {{- if $cert.caEnabled }}
          -CAfile {{ printf "/etc/tls/certs/%s" $name }}/ca.crt
          {{- end }}
          -key {{ printf "/etc/tls/certs/%s" $name }}/tls.key
          -connect {{ include "admin-api-urls" $root }}'
        {{- end }}

        {{- if eq $cert.secretRef.name "external-tls-secret" }}
          echo "---> testing external tls"

          {{- if eq $values.listeners.kafka.external.default.tls.cert $name }}
          echo "-----> testing external tls: kafka api"
            {{- $port := ( first $values.listeners.kafka.external.default.advertisedPorts ) }}
          retry 5 'openssl s_client -verify_return_error -prexit
            {{- if $cert.caEnabled }}
          -CAfile {{ printf "/etc/tls/certs/%s" $name }}/ca.crt
            {{- end }}
          -key {{ printf "/etc/tls/certs/%s" $name }}/tls.key
          -connect {{ $values.external.domain }}:{{ $port }}'
          {{- end }}

          {{- if and (eq $values.listeners.schemaRegistry.external.default.tls.cert $name) (include "redpanda-22-2-x-without-sasl" $root | fromJson).bool }}
          echo "-----> testing external tls: schema registry"
            {{- $port := ( first $values.listeners.schemaRegistry.external.default.advertisedPorts ) }}
          retry 5 'openssl s_client -verify_return_error -prexit
            {{- if $cert.caEnabled }}
          -CAfile {{ printf "/etc/tls/certs/%s" $name }}/ca.crt
            {{- end }}
          -key {{ printf "/etc/tls/certs/%s" $name }}/tls.key
          -connect {{ $values.external.domain }}:{{ $port }}'
          {{- end }}

          {{- if and (eq $values.listeners.http.external.default.tls.cert $name) (include "redpanda-22-2-x-without-sasl" $root | fromJson).bool }}
          echo "-----> testing external tls: http api"
            {{- $port := ( first $values.listeners.http.external.default.advertisedPorts ) }}
          retry 5 'openssl s_client -verify_return_error -prexit
            {{- if $cert.caEnabled }}
          -CAfile {{ printf "/etc/tls/certs/%s" $name }}/ca.crt
            {{- end }}
          -key {{ printf "/etc/tls/certs/%s" $name }}/tls.key
          -connect {{ $values.external.domain }}:{{ $port }}'
          {{- end }}

        {{- end }}
          echo "----"

      {{- end }}
    {{- end }}
      volumeMounts: {{ include "default-mounts" . | nindent 8 }}
      securityContext: {{ include "container-security-context" . | nindent 8 }}
  volumes: {{ include "default-volumes" . | nindent 4 }}
{{- end }}
