-- testdata/TestTemplate/01-default-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/02-one-node-cluster-no-tls-no-sasl-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="http://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail  ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent  ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    touch /tmp/preStopHookFinished
    echo "Not enough replicas or in recovery mode, cannot put a broker into maintenance mode."
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda-0.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: ""
        certFilepath: ""
        enabled: false
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    retention_local_target_ms_default: 21600000
    storage_min_free_bytes: 161061273
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls: null
    pandaproxy_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls: null
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls: null
      rpc_server:
        address: 0.0.0.0
        port: 33145
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        tls: null
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        tls: null
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls: null
    schema_registry_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      tls: null
    kafka_api:
      brokers:
      - redpanda-0:31092
      tls: null
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
    testlabel: exercise_common_labels_template
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 895351138cae180241f2817a18b3cd5a837629f917c3dbdb391cab2c9fecb2a4
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env: []
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: ef402e2646f70c856376462b249f68e0b0d0ff303e4a5e6c52906b2acda5e2fe
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
        testlabel: exercise_common_labels_template
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
        testlabel: exercise_common_labels_template
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    testlabel: exercise_common_labels_template
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
        testlabel: exercise_common_labels_template
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/03-one-node-cluster-tls-no-sasl-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    touch /tmp/preStopHookFinished
    echo "Not enough replicas or in recovery mode, cannot put a broker into maintenance mode."
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 161061273
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 11410ed158ed152574d88ce537b0c869fb8351cb1bd563b538e1d0136a68cdfa
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 9722826df7d0ffe86a7ba81f6c68ad8f9817c1e88fd617ce690e839e89681a0b
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/04-one-node-cluster-no-tls-sasl-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="http://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail  ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent  ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done
      # Setup and export SASL bootstrap-user
      IFS=":" read -r USER_NAME PASSWORD MECHANISM < <(grep "" $(find /etc/secrets/users/* -print))
      MECHANISM=${MECHANISM:-SCRAM-SHA-512}
      rpk acl user create ${USER_NAME} -p {PASSWORD} --mechanism ${MECHANISM} || true

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    touch /tmp/preStopHookFinished
    echo "Not enough replicas or in recovery mode, cannot put a broker into maintenance mode."
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-users
  namespace: default
stringData:
  users.txt: admin:hunter2:SCRAM-SHA-256
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    while true; do
      echo "RUNNING: Monitoring and Updating SASL users"
      USERS_DIR="/etc/secrets/users"

      new_users_list(){
        LIST=$1
        NEW_USER=$2
        if [[ -n "${LIST}" ]]; then
          LIST="${NEW_USER},${LIST}"
        else
          LIST="${NEW_USER}"
        fi

        echo "${LIST}"
      }

      process_users() {
        USERS_DIR=${1-"/etc/secrets/users"}
        USERS_FILE=$(find ${USERS_DIR}/* -print)
        USERS_LIST="kubernetes-controller"
        READ_LIST_SUCCESS=0
        # Read line by line, handle a missing EOL at the end of file
        while read p || [ -n "$p" ] ; do
          IFS=":" read -r USER_NAME PASSWORD MECHANISM <<< $p
          # Do not process empty lines
          if [ -z "$USER_NAME" ]; then
            continue
          fi
          if [[ "${USER_NAME// /}" != "$USER_NAME" ]]; then
            continue
          fi
          echo "Creating user ${USER_NAME}..."
          MECHANISM=${MECHANISM:-SCRAM-SHA-512}
          creation_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
          if [[ $creation_result_exit_code -ne 0 ]]; then
            # Check if the stderr contains "User already exists"
            # this error occurs when password has changed
            if [[ $creation_result == *"User already exists"* ]]; then
              echo "Update user ${USER_NAME}"
              # we will try to update by first deleting
              deletion_result=$(rpk acl user delete ${USER_NAME} 2>&1) && deletion_result_exit_code=$? || deletion_result_exit_code=$?
              if [[ $deletion_result_exit_code -ne 0 ]]; then
                echo "deletion of user ${USER_NAME} failed: ${deletion_result}"
                READ_LIST_SUCCESS=1
                break
              fi
              # Now we update the user
              update_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && update_result_exit_code=$? || update_result_exit_code=$?  # On a non-success exit code
              if [[ $update_result_exit_code -ne 0 ]]; then
                echo "updating user ${USER_NAME} failed: ${update_result}"
                READ_LIST_SUCCESS=1
                break
              else
                echo "Updated user ${USER_NAME}..."
                USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
              fi
            else
              # Another error occurred, so output the original message and exit code
              echo "error creating user ${USER_NAME}: ${creation_result}"
              READ_LIST_SUCCESS=1
              break
            fi
          # On a success, the user was created so output that
          else
            echo "Created user ${USER_NAME}..."
            USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
          fi
        done < $USERS_FILE

        if [[ -n "${USERS_LIST}" && ${READ_LIST_SUCCESS} ]]; then
          echo "Setting superusers configurations with users [${USERS_LIST}]"
          superuser_result=$(rpk cluster config set superusers [${USERS_LIST}] 2>&1) && superuser_result_exit_code=$? || superuser_result_exit_code=$?
          if [[ $superuser_result_exit_code -ne 0 ]]; then
              echo "Setting superusers configurations failed: ${superuser_result}"
          else
              echo "Completed setting superusers configurations"
          fi
        fi
      }

      # before we do anything ensure we have the bootstrap user
      echo "Ensuring bootstrap user ${RPK_USER}..."
      creation_result=$(rpk acl user create ${RPK_USER} -p ${RPK_PASS} --mechanism ${RPK_SASL_MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
      if [[ $creation_result_exit_code -ne 0 ]]; then
        if [[ $creation_result == *"User already exists"* ]]; then
          echo "Bootstrap user already created"
        else
          echo "error creating user ${RPK_USER}: ${creation_result}"
        fi
      fi

      # first time processing
      process_users $USERS_DIR

      # subsequent changes detected here
      # watching delete_self as documented in https://ahmet.im/blog/kubernetes-inotify/
      USERS_FILE=$(find ${USERS_DIR}/* -print)
      while RES=$(inotifywait -q -e delete_self ${USERS_FILE}); do
        process_users $USERS_DIR
      done
    done
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-bootstrap-user
  namespace: default
stringData:
  password: changeme
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: true
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda-0.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: ""
        certFilepath: ""
        enabled: false
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    enable_rack_awareness: false
    enable_sasl: true
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: true
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 161061273
    superusers:
    - kubernetes-controller
    - admin
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8082
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8083
      pandaproxy_api_tls: null
    pandaproxy_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls: null
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        authentication_method: sasl
        name: internal
        port: 9093
      - address: 0.0.0.0
        authentication_method: sasl
        name: default
        port: 9094
      kafka_api_tls: null
      rpc_server:
        address: 0.0.0.0
        port: 33145
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        tls: null
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        tls: null
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8081
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8084
      schema_registry_api_tls: null
    schema_registry_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      tls: null
    kafka_api:
      brokers:
      - redpanda-0:31092
      tls: null
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 1e16142159bcecafacda84c87d52e2389eb38261965ffdf4b369422f3059ba71
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command:
        - sh
        - -c
        - set -e; IFS=':' read -r KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM
          < <(grep "" $(find /mnt/users/* -print)); KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM:-SCRAM-SHA-512};
          export KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM;  export
          KAFKA_SCHEMAREGISTRY_USERNAME=$KAFKA_SASL_USERNAME;  export KAFKA_SCHEMAREGISTRY_PASSWORD=$KAFKA_SASL_PASSWORD;  export
          REDPANDA_ADMINAPI_USERNAME=$KAFKA_SASL_USERNAME;  export REDPANDA_ADMINAPI_PASSWORD=$KAFKA_SASL_PASSWORD;  /app/console
          $@
        - --
        env: []
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/users
          name: redpanda-users
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: redpanda-users
        secret:
          secretName: redpanda-users
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 46ffec0fb126d4d2bd104b083f32f6143af3a416899c2932b1d9aa90c89f0841
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: users
        secret:
          secretName: redpanda-users
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: users
        secret:
          secretName: redpanda-users
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/05-one-node-cluster-tls-sasl-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done
      # Setup and export SASL bootstrap-user
      IFS=":" read -r USER_NAME PASSWORD MECHANISM < <(grep "" $(find /etc/secrets/users/* -print))
      MECHANISM=${MECHANISM:-SCRAM-SHA-512}
      rpk acl user create ${USER_NAME} -p {PASSWORD} --mechanism ${MECHANISM} || true

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    touch /tmp/preStopHookFinished
    echo "Not enough replicas or in recovery mode, cannot put a broker into maintenance mode."
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-users
  namespace: default
stringData:
  users.txt: admins:change-me:SCRAM-SHA-256
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    while true; do
      echo "RUNNING: Monitoring and Updating SASL users"
      USERS_DIR="/etc/secrets/users"

      new_users_list(){
        LIST=$1
        NEW_USER=$2
        if [[ -n "${LIST}" ]]; then
          LIST="${NEW_USER},${LIST}"
        else
          LIST="${NEW_USER}"
        fi

        echo "${LIST}"
      }

      process_users() {
        USERS_DIR=${1-"/etc/secrets/users"}
        USERS_FILE=$(find ${USERS_DIR}/* -print)
        USERS_LIST="kubernetes-controller"
        READ_LIST_SUCCESS=0
        # Read line by line, handle a missing EOL at the end of file
        while read p || [ -n "$p" ] ; do
          IFS=":" read -r USER_NAME PASSWORD MECHANISM <<< $p
          # Do not process empty lines
          if [ -z "$USER_NAME" ]; then
            continue
          fi
          if [[ "${USER_NAME// /}" != "$USER_NAME" ]]; then
            continue
          fi
          echo "Creating user ${USER_NAME}..."
          MECHANISM=${MECHANISM:-SCRAM-SHA-512}
          creation_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
          if [[ $creation_result_exit_code -ne 0 ]]; then
            # Check if the stderr contains "User already exists"
            # this error occurs when password has changed
            if [[ $creation_result == *"User already exists"* ]]; then
              echo "Update user ${USER_NAME}"
              # we will try to update by first deleting
              deletion_result=$(rpk acl user delete ${USER_NAME} 2>&1) && deletion_result_exit_code=$? || deletion_result_exit_code=$?
              if [[ $deletion_result_exit_code -ne 0 ]]; then
                echo "deletion of user ${USER_NAME} failed: ${deletion_result}"
                READ_LIST_SUCCESS=1
                break
              fi
              # Now we update the user
              update_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && update_result_exit_code=$? || update_result_exit_code=$?  # On a non-success exit code
              if [[ $update_result_exit_code -ne 0 ]]; then
                echo "updating user ${USER_NAME} failed: ${update_result}"
                READ_LIST_SUCCESS=1
                break
              else
                echo "Updated user ${USER_NAME}..."
                USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
              fi
            else
              # Another error occurred, so output the original message and exit code
              echo "error creating user ${USER_NAME}: ${creation_result}"
              READ_LIST_SUCCESS=1
              break
            fi
          # On a success, the user was created so output that
          else
            echo "Created user ${USER_NAME}..."
            USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
          fi
        done < $USERS_FILE

        if [[ -n "${USERS_LIST}" && ${READ_LIST_SUCCESS} ]]; then
          echo "Setting superusers configurations with users [${USERS_LIST}]"
          superuser_result=$(rpk cluster config set superusers [${USERS_LIST}] 2>&1) && superuser_result_exit_code=$? || superuser_result_exit_code=$?
          if [[ $superuser_result_exit_code -ne 0 ]]; then
              echo "Setting superusers configurations failed: ${superuser_result}"
          else
              echo "Completed setting superusers configurations"
          fi
        fi
      }

      # before we do anything ensure we have the bootstrap user
      echo "Ensuring bootstrap user ${RPK_USER}..."
      creation_result=$(rpk acl user create ${RPK_USER} -p ${RPK_PASS} --mechanism ${RPK_SASL_MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
      if [[ $creation_result_exit_code -ne 0 ]]; then
        if [[ $creation_result == *"User already exists"* ]]; then
          echo "Bootstrap user already created"
        else
          echo "error creating user ${RPK_USER}: ${creation_result}"
        fi
      fi

      # first time processing
      process_users $USERS_DIR

      # subsequent changes detected here
      # watching delete_self as documented in https://ahmet.im/blog/kubernetes-inotify/
      USERS_FILE=$(find ${USERS_DIR}/* -print)
      while RES=$(inotifywait -q -e delete_self ${USERS_FILE}); do
        process_users $USERS_DIR
      done
    done
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-bootstrap-user
  namespace: default
stringData:
  password: changeme
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: true
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    enable_rack_awareness: false
    enable_sasl: true
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: true
    kafka_nodelete_topics:
    - audit
    - consumer_offsets
    - _schemas
    - my_sample_topic
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 161061273
    superusers:
    - kubernetes-controller
    - admins
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8082
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        authentication_method: sasl
        name: internal
        port: 9093
      - address: 0.0.0.0
        authentication_method: sasl
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8081
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 65863c7c89a027a8bd7647d75504b0cc672c1c99ee06770ec989a86cadabb9a9
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command:
        - sh
        - -c
        - set -e; IFS=':' read -r KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM
          < <(grep "" $(find /mnt/users/* -print)); KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM:-SCRAM-SHA-512};
          export KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM;  export
          KAFKA_SCHEMAREGISTRY_USERNAME=$KAFKA_SASL_USERNAME;  export KAFKA_SCHEMAREGISTRY_PASSWORD=$KAFKA_SASL_PASSWORD;  export
          REDPANDA_ADMINAPI_USERNAME=$KAFKA_SASL_USERNAME;  export REDPANDA_ADMINAPI_PASSWORD=$KAFKA_SASL_PASSWORD;  /app/console
          $@
        - --
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/users
          name: redpanda-users
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: redpanda-users
        secret:
          secretName: redpanda-users
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 7aad9372f61b2d9f1e70eb48af0f60a75f58778b600b29b763fc3c98a1a1f85e
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: redpanda-users
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: redpanda-users
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/06-rack-awareness-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology.kubernetes.io/zone"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk-bundle
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda
subjects:
- kind: ServiceAccount
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk-bundle
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda-rpk-bundle
subjects:
- kind: ServiceAccount
  name: redpanda
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: redpanda
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: redpanda
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/07-multiple-listeners-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":31292}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":31292}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":31292}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[2] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":31392}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":31392}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":31392}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[3] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":30183}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":30183}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":30183}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[2] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":30283}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":30283}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":30283}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[3] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - http://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - http://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: ""
        certFilepath: ""
        enabled: false
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      - address: 0.0.0.0
        name: ext2
        port: 18083
      - address: 0.0.0.0
        name: ext3
        port: 28083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: ext2
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/cert2/tls.crt
        enabled: true
        key_file: /etc/tls/certs/cert2/tls.key
        name: ext3
        require_client_auth: true
        truststore_file: /etc/ssl/certs/ca-certificates.crt
    pandaproxy_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      - address: 0.0.0.0
        name: ext2
        port: 19094
      - address: 0.0.0.0
        name: ext3
        port: 29094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: ext2
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/cert2/tls.crt
        enabled: true
        key_file: /etc/tls/certs/cert2/tls.key
        name: ext3
        require_client_auth: true
        truststore_file: /etc/ssl/certs/ca-certificates.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls: null
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      - address: 0.0.0.0
        name: ext2
        port: 18081
      - address: 0.0.0.0
        name: ext3
        port: 28081
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: ext2
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/cert2/tls.crt
        enabled: true
        key_file: /etc/tls/certs/cert2/tls.key
        name: ext3
        require_client_auth: true
        truststore_file: /etc/ssl/certs/ca-certificates.crt
    schema_registry_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls: null
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: kafka-ext2
    nodePort: 31292
    port: 19094
    protocol: TCP
    targetPort: 0
  - name: kafka-ext3
    nodePort: 31392
    port: 29094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: http-ext2
    nodePort: 30183
    port: 18083
    protocol: TCP
    targetPort: 0
  - name: http-ext3
    nodePort: 30283
    port: 28083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  - name: schema-ext2
    nodePort: 30181
    port: 18081
    protocol: TCP
    targetPort: 0
  - name: schema-ext3
    nodePort: 30281
    port: 28081
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 885ad29f488ce929e8b7dbcefc063f9539ff6222addcbb0aed8c28c88073804e
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env: []
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 7f7625ee743c9f46a4319d58cb5d327f3fd39f7942c6d2f0b709efee768ca947
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 18083
          name: http-ext2
        - containerPort: 28083
          name: http-ext3
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 19094
          name: kafka-ext2
        - containerPort: 29094
          name: kafka-ext3
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        - containerPort: 18081
          name: schema-ext2
        - containerPort: 28081
          name: schema-ext3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/cert2
          name: redpanda-cert2-cert
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/cert2
          name: redpanda-cert2-cert
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/cert2
          name: redpanda-cert2-cert
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/cert2
          name: redpanda-cert2-cert
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-cert2-cert
        secret:
          defaultMode: 288
          secretName: redpanda-cert2-cert
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-cert2-root-certificate
  namespace: default
spec:
  commonName: redpanda-cert2-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-cert2-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-cert2-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-cert2-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-cert2-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-cert2-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-cert2-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-cert2-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-cert2-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/cert2
          name: redpanda-cert2-cert
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-cert2-cert
        secret:
          defaultMode: 288
          secretName: redpanda-cert2-cert
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/08-custom-podantiaffinity-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/09-initcontainers-resources-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-fs-validator
  namespace: default
stringData:
  fsValidator.sh: |-
    set -e
    EXPECTED_FS_TYPE=$1

    DATA_DIR="/var/lib/redpanda/data"
    TEST_FILE="testfile"

    echo "checking data directory exist..."
    if [ ! -d "${DATA_DIR}" ]; then
      echo "data directory does not exists, exiting"
      exit 1
    fi

    echo "checking filesystem type..."
    FS_TYPE=$(df -T $DATA_DIR  | tail -n +2 | awk '{print $2}')

    if [ "${FS_TYPE}" != "${EXPECTED_FS_TYPE}" ]; then
      echo "file system found to be ${FS_TYPE} when expected ${EXPECTED_FS_TYPE}"
      exit 1
    fi

    echo "checking if able to create a test file..."

    touch ${DATA_DIR}/${TEST_FILE}
    result=$(touch ${DATA_DIR}/${TEST_FILE} 2> /dev/null; echo $?)
    if [ "${result}" != "0" ]; then
      echo "could not write testfile, may not have write permission"
      exit 1
    fi

    echo "checking if able to delete a test file..."

    result=$(rm ${DATA_DIR}/${TEST_FILE} 2> /dev/null; echo $?)
    if [ "${result}" != "0" ]; then
      echo "could not delete testfile"
      exit 1
    fi

    echo "passed"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /fake/lifecycle
          name: test-extra-volume
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
        - mountPath: /fake/lifecycle
          name: test-extra-volume
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /fake/lifecycle
          name: test-extra-volume
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - chown 101:101 -R /var/lib/redpanda/data
        image: busybox:latest
        name: set-datadir-ownership
        resources:
          limits:
            cpu: 200m
            memory: 60Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /fake/lifecycle
          name: test-extra-volume
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/fs-validator/scripts/fsValidator.sh
          ext4 & wait $!
        command:
        - /bin/sh
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: fs-validator
        resources:
          limits:
            cpu: 200m
            memory: 60Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /fake/lifecycle
          name: test-extra-volume
        - mountPath: /etc/secrets/fs-validator/scripts/
          name: redpanda-fs-validator
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources:
          limits:
            cpu: 200m
            memory: 60Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /fake/lifecycle
          name: test-extra-volume
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      - args:
        - |-
          set -xe
          echo "Hello World!"
        command:
        - /bin/bash
        - -c
        image: mintel/docker-alpine-bash-curl-jq:latest
        name: test-init-container
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: redpanda-fs-validator
        secret:
          defaultMode: 509
          secretName: redpanda-fs-validator
      - name: test-extra-volume
        secret:
          defaultMode: 508
          secretName: redpanda-sts-lifecycle
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/10-external-addresses-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"redpanda-1.my-domain\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"127.0.0.1.my-domain\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"192.168.0.1.my-domain\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"redpanda-1.my-domain\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"127.0.0.1.my-domain\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"192.168.0.1.my-domain\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-1.my-domain:31644
      - 127.0.0.1.my-domain:31644
      - 192.168.0.1.my-domain:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-1.my-domain:31092
      - 127.0.0.1.my-domain:31092
      - 192.168.0.1.my-domain:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 931878c927fe58f1eae93f3a3993095378a5b203e73f18af1eaaad6ec1ef6811
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - my-domain
  - '*.my-domain'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - my-domain
  - '*.my-domain'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/11-update-sasl-users-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done
      # Setup and export SASL bootstrap-user
      IFS=":" read -r USER_NAME PASSWORD MECHANISM < <(grep "" $(find /etc/secrets/users/* -print))
      MECHANISM=${MECHANISM:-SCRAM-SHA-512}
      rpk acl user create ${USER_NAME} -p {PASSWORD} --mechanism ${MECHANISM} || true

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: some-users
  namespace: default
stringData:
  users.txt: |-
    admin:badpassword:SCRAM-SHA-256
    user1:pass1word:SCRAM-SHA-512
    someuser:ABC123r:SCRAM-SHA-512
    anotherme:blah2784a:SCRAM-SHA-512
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    while true; do
      echo "RUNNING: Monitoring and Updating SASL users"
      USERS_DIR="/etc/secrets/users"

      new_users_list(){
        LIST=$1
        NEW_USER=$2
        if [[ -n "${LIST}" ]]; then
          LIST="${NEW_USER},${LIST}"
        else
          LIST="${NEW_USER}"
        fi

        echo "${LIST}"
      }

      process_users() {
        USERS_DIR=${1-"/etc/secrets/users"}
        USERS_FILE=$(find ${USERS_DIR}/* -print)
        USERS_LIST="kubernetes-controller"
        READ_LIST_SUCCESS=0
        # Read line by line, handle a missing EOL at the end of file
        while read p || [ -n "$p" ] ; do
          IFS=":" read -r USER_NAME PASSWORD MECHANISM <<< $p
          # Do not process empty lines
          if [ -z "$USER_NAME" ]; then
            continue
          fi
          if [[ "${USER_NAME// /}" != "$USER_NAME" ]]; then
            continue
          fi
          echo "Creating user ${USER_NAME}..."
          MECHANISM=${MECHANISM:-SCRAM-SHA-512}
          creation_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
          if [[ $creation_result_exit_code -ne 0 ]]; then
            # Check if the stderr contains "User already exists"
            # this error occurs when password has changed
            if [[ $creation_result == *"User already exists"* ]]; then
              echo "Update user ${USER_NAME}"
              # we will try to update by first deleting
              deletion_result=$(rpk acl user delete ${USER_NAME} 2>&1) && deletion_result_exit_code=$? || deletion_result_exit_code=$?
              if [[ $deletion_result_exit_code -ne 0 ]]; then
                echo "deletion of user ${USER_NAME} failed: ${deletion_result}"
                READ_LIST_SUCCESS=1
                break
              fi
              # Now we update the user
              update_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && update_result_exit_code=$? || update_result_exit_code=$?  # On a non-success exit code
              if [[ $update_result_exit_code -ne 0 ]]; then
                echo "updating user ${USER_NAME} failed: ${update_result}"
                READ_LIST_SUCCESS=1
                break
              else
                echo "Updated user ${USER_NAME}..."
                USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
              fi
            else
              # Another error occurred, so output the original message and exit code
              echo "error creating user ${USER_NAME}: ${creation_result}"
              READ_LIST_SUCCESS=1
              break
            fi
          # On a success, the user was created so output that
          else
            echo "Created user ${USER_NAME}..."
            USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
          fi
        done < $USERS_FILE

        if [[ -n "${USERS_LIST}" && ${READ_LIST_SUCCESS} ]]; then
          echo "Setting superusers configurations with users [${USERS_LIST}]"
          superuser_result=$(rpk cluster config set superusers [${USERS_LIST}] 2>&1) && superuser_result_exit_code=$? || superuser_result_exit_code=$?
          if [[ $superuser_result_exit_code -ne 0 ]]; then
              echo "Setting superusers configurations failed: ${superuser_result}"
          else
              echo "Completed setting superusers configurations"
          fi
        fi
      }

      # before we do anything ensure we have the bootstrap user
      echo "Ensuring bootstrap user ${RPK_USER}..."
      creation_result=$(rpk acl user create ${RPK_USER} -p ${RPK_PASS} --mechanism ${RPK_SASL_MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
      if [[ $creation_result_exit_code -ne 0 ]]; then
        if [[ $creation_result == *"User already exists"* ]]; then
          echo "Bootstrap user already created"
        else
          echo "error creating user ${RPK_USER}: ${creation_result}"
        fi
      fi

      # first time processing
      process_users $USERS_DIR

      # subsequent changes detected here
      # watching delete_self as documented in https://ahmet.im/blog/kubernetes-inotify/
      USERS_FILE=$(find ${USERS_DIR}/* -print)
      while RES=$(inotifywait -q -e delete_self ${USERS_FILE}); do
        process_users $USERS_DIR
      done
    done
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-bootstrap-user
  namespace: default
stringData:
  password: changeme
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: true
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: true
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: true
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
    superusers:
    - kubernetes-controller
    - admin
    - user1
    - someuser
    - anotherme
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8082
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        authentication_method: sasl
        name: internal
        port: 9093
      - address: 0.0.0.0
        authentication_method: sasl
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8081
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 4007d2775ef209d95445aae9091252dbc6a59caa90054071c08682609ab4d5f0
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command:
        - sh
        - -c
        - set -e; IFS=':' read -r KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM
          < <(grep "" $(find /mnt/users/* -print)); KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM:-SCRAM-SHA-512};
          export KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM;  export
          KAFKA_SCHEMAREGISTRY_USERNAME=$KAFKA_SASL_USERNAME;  export KAFKA_SCHEMAREGISTRY_PASSWORD=$KAFKA_SASL_PASSWORD;  export
          REDPANDA_ADMINAPI_USERNAME=$KAFKA_SASL_USERNAME;  export REDPANDA_ADMINAPI_PASSWORD=$KAFKA_SASL_PASSWORD;  /app/console
          $@
        - --
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/users
          name: redpanda-users
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: redpanda-users
        secret:
          secretName: some-users
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 28635308956eb868571a78176e97bf20e3aea3e52b96a6db473701f567a1229a
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: some-users
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: some-users
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/12-external-cert-secrets-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30090}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30090}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30090}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30070}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30070}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30070}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0.random-domain:31644
      - redpanda-1.random-domain:31644
      - redpanda-2.random-domain:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0.random-domain:30090
      - redpanda-1.random-domain:30090
      - redpanda-2.random-domain:30090
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 30090
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30070
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30080
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: cef2714156066f0d1bf287949062ae8c31c43de9784edfa93a21a753d6637fac
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: external-tls-secret
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - random-domain
  - '*.random-domain'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: external-tls-secret
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/13-loadbalancer-tls-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.random-domain\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0.random-domain:31644
      - redpanda-1.random-domain:31644
      - redpanda-2.random-domain:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0.random-domain:31092
      - redpanda-1.random-domain:31092
      - redpanda-2.random-domain:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    repdanda.com/type: loadbalancer
  name: lb-redpanda-0
  namespace: default
spec:
  externalTrafficPolicy: Local
  loadBalancerSourceRanges: null
  ports:
  - name: admin-default
    port: 31644
    protocol: TCP
    targetPort: 9645
  - name: kafka-default
    port: 31092
    protocol: TCP
    targetPort: 9094
  - name: http-default
    port: 30082
    protocol: TCP
    targetPort: 8083
  - name: schema-default
    port: 30081
    protocol: TCP
    targetPort: 8084
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
    statefulset.kubernetes.io/pod-name: redpanda-0
  sessionAffinity: None
  type: LoadBalancer
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    repdanda.com/type: loadbalancer
  name: lb-redpanda-1
  namespace: default
spec:
  externalTrafficPolicy: Local
  loadBalancerSourceRanges: null
  ports:
  - name: admin-default
    port: 31644
    protocol: TCP
    targetPort: 9645
  - name: kafka-default
    port: 31092
    protocol: TCP
    targetPort: 9094
  - name: http-default
    port: 30082
    protocol: TCP
    targetPort: 8083
  - name: schema-default
    port: 30081
    protocol: TCP
    targetPort: 8084
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
    statefulset.kubernetes.io/pod-name: redpanda-1
  sessionAffinity: None
  type: LoadBalancer
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    repdanda.com/type: loadbalancer
  name: lb-redpanda-2
  namespace: default
spec:
  externalTrafficPolicy: Local
  loadBalancerSourceRanges: null
  ports:
  - name: admin-default
    port: 31644
    protocol: TCP
    targetPort: 9645
  - name: kafka-default
    port: 31092
    protocol: TCP
    targetPort: 9094
  - name: http-default
    port: 30082
    protocol: TCP
    targetPort: 8083
  - name: schema-default
    port: 30081
    protocol: TCP
    targetPort: 8084
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
    statefulset.kubernetes.io/pod-name: redpanda-2
  sessionAffinity: None
  type: LoadBalancer
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: cef2714156066f0d1bf287949062ae8c31c43de9784edfa93a21a753d6637fac
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: external-tls-secret
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - random-domain
  - '*.random-domain'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: external-tls-secret
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/14-prometheus-no-tls-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="http://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail  ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent  ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - http://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - http://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: ""
        certFilepath: ""
        enabled: false
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls: null
    pandaproxy_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls: null
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls: null
      rpc_server:
        address: 0.0.0.0
        port: 33145
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls: null
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls: null
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls: null
    schema_registry_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls: null
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls: null
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "true"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 37deb802dbedb43b95fe086f12a7b0e1722fbe1646fceaccc1a9a029ebe3a27f
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env: []
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 713c75d8c1b0478dbfabf0679f4ec323157ea9a352c3b49c50b2824869a9f6b5
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    release: prometheus
  name: redpanda
  namespace: default
spec:
  endpoints:
  - enableHttp2: null
    interval: 30s
    path: /public_metrics
    port: admin
    scheme: http
  namespaceSelector: {}
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      monitoring.redpanda.com/enabled: "true"
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/15-prometheus-tls-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "true"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    release: prometheus
  name: redpanda
  namespace: default
spec:
  endpoints:
  - enableHttp2: null
    interval: 30s
    path: /public_metrics
    port: admin
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector: {}
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      monitoring.redpanda.com/enabled: "true"
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/16-controller-sidecar-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk-bundle
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda-sidecar-controllers
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk-bundle
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda-rpk-bundle
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - patch
  - update
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redpanda-sidecar-controllers
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      - args:
        - --operator-mode=false
        - --namespace=default
        - --health-probe-bind-address=:8085
        - --metrics-bind-address=:9082
        - --additional-controllers=all
        command:
        - /manager
        env:
        - name: REDPANDA_HELM_RELEASE_NAME
          value: redpanda
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: redpanda-controllers
        resources: {}
        securityContext: {}
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/17-resources-without-unit-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2000M
      - --reserve-memory=0M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 6d16fb5d08c983678d92c9172709ba475eeee0a6741debf299e102213f69413a
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: "1"
            memory: 2500Mi
          requests:
            cpu: "1"
            memory: 2500Mi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/18-single-external-address-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE="$POD_ORDINAL-XYZ-$(echo -n $HOST_IP_ADDRESS | sha256sum | head -c 7)"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"$PREFIX_TEMPLATE.my-domain\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE="$POD_ORDINAL-XYZ-$(echo -n $HOST_IP_ADDRESS | sha256sum | head -c 7)"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"$PREFIX_TEMPLATE.my-domain\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE="$POD_ORDINAL-XYZ-$(echo -n $HOST_IP_ADDRESS | sha256sum | head -c 7)"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"$PREFIX_TEMPLATE.my-domain\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE="$POD_ORDINAL-XYZ-$(echo -n $HOST_IP_ADDRESS | sha256sum | head -c 7)"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"$PREFIX_TEMPLATE.my-domain\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE="$POD_ORDINAL-XYZ-$(echo -n $HOST_IP_ADDRESS | sha256sum | head -c 7)"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"$PREFIX_TEMPLATE.my-domain\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE="$POD_ORDINAL-XYZ-$(echo -n $HOST_IP_ADDRESS | sha256sum | head -c 7)"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"$PREFIX_TEMPLATE.my-domain\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - $PREFIX_TEMPLATE.my-domain:31644
      - $PREFIX_TEMPLATE.my-domain:31644
      - $PREFIX_TEMPLATE.my-domain:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - $PREFIX_TEMPLATE.my-domain:31092
      - $PREFIX_TEMPLATE.my-domain:31092
      - $PREFIX_TEMPLATE.my-domain:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d51fbbf3bd613148c6f2f9f770534944b398683a2a8ad750562f172db95776c9
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - my-domain
  - '*.my-domain'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - my-domain
  - '*.my-domain'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/21-eks-tiered-storage-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_access_key: ${AWS_ACCESS_KEY_ID}
    cloud_storage_bucket: ${TEST_BUCKET}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_region: ${AWS_REGION}
    cloud_storage_secret_key: ${AWS_SECRET_ACCESS_KEY}
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      - emptyDir:
          sizeLimit: 5368709120
        name: tiered-storage-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/22-gke-tiered-storage-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_access_key: ${GCP_ACCESS_KEY_ID}
    cloud_storage_api_endpoint: storage.googleapis.com
    cloud_storage_bucket: ${TEST_BUCKET}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_region: US-WEST1
    cloud_storage_secret_key: ${GCP_SECRET_ACCESS_KEY}
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      - emptyDir:
          sizeLimit: 5368709120
        name: tiered-storage-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/23-aks-tiered-storage-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_azure_container: ${TEST_STORAGE_CONTAINER}
    cloud_storage_azure_shared_key: ${TEST_AZURE_SHARED_KEY}
    cloud_storage_azure_storage_account: ${TEST_STORAGE_ACCOUNT}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      - emptyDir:
          sizeLimit: 5368709120
        name: tiered-storage-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: managed-csi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/23-aks-tiered-storage-without-creds-novalues.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_azure_container: ${TEST_STORAGE_CONTAINER}
    cloud_storage_azure_shared_key: ${TEST_AZURE_SHARED_KEY}
    cloud_storage_azure_storage_account: TestForStringThatShouldNotBeWrappedWithQuotes
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      - emptyDir:
          sizeLimit: 5368709120
        name: tiered-storage-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: managed-csi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/24-eks-tiered-storage-persistent-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_access_key: ${AWS_ACCESS_KEY_ID}
    cloud_storage_bucket: ${TEST_BUCKET}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_region: ${AWS_REGION}
    cloud_storage_secret_key: ${AWS_SECRET_ACCESS_KEY}
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: tiered-storage-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/25-gke-tiered-storage-persistent-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_access_key: ${GCP_ACCESS_KEY_ID}
    cloud_storage_api_endpoint: storage.googleapis.com
    cloud_storage_bucket: ${TEST_BUCKET}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_region: US-WEST1
    cloud_storage_secret_key: ${GCP_SECRET_ACCESS_KEY}
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: tiered-storage-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/26-aks-tiered-storage-persistent-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_azure_container: ${TEST_STORAGE_CONTAINER}
    cloud_storage_azure_shared_key: ${TEST_AZURE_SHARED_KEY}
    cloud_storage_azure_storage_account: ${TEST_STORAGE_ACCOUNT}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: managed-csi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: tiered-storage-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
      storageClassName: managed-csi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/26-aks-tiered-storage-persistent-without-creds-novalues.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_azure_container: ${TEST_STORAGE_CONTAINER}
    cloud_storage_azure_shared_key: ${TEST_AZURE_SHARED_KEY}
    cloud_storage_azure_storage_account: ${TEST_STORAGE_ACCOUNT}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: managed-csi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: tiered-storage-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
      storageClassName: managed-csi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/27-eks-tiered-storage-persistent-nameoverwrite-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_access_key: ${AWS_ACCESS_KEY_ID}
    cloud_storage_bucket: ${TEST_BUCKET}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_region: ${AWS_REGION}
    cloud_storage_secret_key: ${AWS_SECRET_ACCESS_KEY}
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: shadow-index-cache
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/28-gke-tiered-storage-persistent-nameoverwrite-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_access_key: ${GCP_ACCESS_KEY_ID}
    cloud_storage_api_endpoint: storage.googleapis.com
    cloud_storage_bucket: ${TEST_BUCKET}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_region: US-WEST1
    cloud_storage_secret_key: ${GCP_SECRET_ACCESS_KEY}
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: shadow-index-cache
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/29-aks-tiered-storage-persistent-nameoverwrite-with-creds-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_SAMPLE_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_azure_container: ${TEST_STORAGE_CONTAINER}
    cloud_storage_azure_shared_key: ${TEST_AZURE_SHARED_KEY}
    cloud_storage_azure_storage_account: ${TEST_STORAGE_ACCOUNT}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: managed-csi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: shadow-index-cache
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
      storageClassName: managed-csi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_SAMPLE_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/29-aks-tiered-storage-persistent-nameoverwrite-without-creds-novalues.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_azure_container: ${TEST_STORAGE_CONTAINER}
    cloud_storage_azure_shared_key: ${TEST_AZURE_SHARED_KEY}
    cloud_storage_azure_storage_account: ${TEST_STORAGE_ACCOUNT}
    cloud_storage_cache_size: 5368709120
    cloud_storage_credentials_source: config_file
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_segment_max_upload_interval_sec: 1
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=1024M
      - --reserve-memory=100M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: true
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: redpandadata/console-unstable:master-8a51854
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: a936339b049421146a68a944247abca8d6701ae9d54f53f680d7f3f3bc0b4fdf
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 400m
            memory: 2.0Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: shadow-index-cache
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: managed-csi
    status: {}
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: shadow-index-cache
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5368709120
      storageClassName: managed-csi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/30-additional-flags-override-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --smp=99
      - --reserve-memory=9999
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 4725b0577bc9449cd4e6b7bb0d0132e5bcd6666949c700e21549cd43bdd094cd
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/31-overwrite-statefulset-pod-labels-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        azure.workload.identity/use: "true"
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/32-statefulset-podspec-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: EXTRA_ENV_VAR
          value: THIS_IS_AN_EXAMPLE
        - name: POD_IP
          value: This is an override and will break the deployment
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/33-advertised-ports-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE="ext2-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":22220}")

    PREFIX_TEMPLATE="ext2-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":22221}")

    PREFIX_TEMPLATE="ext2-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":22222}")

    PREFIX_TEMPLATE="ext2-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext2\",\"port\":22223}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[2] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE="ext3-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":33330}")

    PREFIX_TEMPLATE="ext3-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":33331}")

    PREFIX_TEMPLATE="ext3-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":33332}")

    PREFIX_TEMPLATE="ext3-$POD_ORDINAL"
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext3\",\"port\":33333}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[3] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE="ext4-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext4\",\"port\":44440}")

    PREFIX_TEMPLATE="ext4-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext4\",\"port\":44441}")

    PREFIX_TEMPLATE="ext4-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext4\",\"port\":44442}")

    PREFIX_TEMPLATE="ext4-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext4\",\"port\":44443}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[2] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE="ext5-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext5\",\"port\":55550}")

    PREFIX_TEMPLATE="ext5-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext5\",\"port\":55551}")

    PREFIX_TEMPLATE="ext5-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext5\",\"port\":55552}")

    PREFIX_TEMPLATE="ext5-$POD_ORDINAL"
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"ext5\",\"port\":55553}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[3] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      - redpanda-3.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-3.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: ""
        certFilepath: ""
        enabled: false
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      - address: 0.0.0.0
        name: ext4
        port: 44449
      - address: 0.0.0.0
        name: ext5
        port: 55559
      pandaproxy_api_tls: null
    pandaproxy_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-3.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      - address: 0.0.0.0
        name: ext2
        port: 22229
      - address: 0.0.0.0
        name: ext3
        port: 33339
      kafka_api_tls: null
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-3.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        - redpanda-3.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        - redpanda-3.redpanda.default.svc.cluster.local.:9093
        tls: null
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-3.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      - redpanda-3:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      - redpanda-3:31092
      tls: null
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: kafka-ext2
    nodePort: 22220
    port: 22229
    protocol: TCP
    targetPort: 0
  - name: kafka-ext3
    nodePort: 33330
    port: 33339
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: http-ext4
    nodePort: 44440
    port: 44449
    protocol: TCP
    targetPort: 0
  - name: http-ext5
    nodePort: 55550
    port: 55559
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 9ae1260f14e2391b79f2d023b159e46afa8b1d7f4438ce8f9597941d907b3533
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 953d849ab8efccc6b80185b849f3f89e59c9c67272720ba3eb84248d0be348d1
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 44449
          name: http-ext4
        - containerPort: 55559
          name: http-ext5
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 22229
          name: kafka-ext2
        - containerPort: 33339
          name: kafka-ext3
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/33-pod-selector-lables-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
      redpanda.com/testing: "true"
      redpanda.com/testing-samples: sample
      redpanda.com/testing-samples-two: two
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
    redpanda.com/testing: "true"
    redpanda.com/testing-samples: sample
    redpanda.com/testing-samples-two: two
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
    redpanda.com/testing: "true"
    redpanda.com/testing-samples: sample
    redpanda.com/testing-samples-two: two
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/testing: "true"
      redpanda.com/testing-samples: sample
      redpanda.com/testing-samples-two: two
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
        redpanda.com/testing: "true"
        redpanda.com/testing-samples: sample
        redpanda.com/testing-samples-two: two
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
                redpanda.com/testing: "true"
                redpanda.com/testing-samples: sample
                redpanda.com/testing-samples-two: two
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
            redpanda.com/testing: "true"
            redpanda.com/testing-samples: sample
            redpanda.com/testing-samples-two: two
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/34-security-contexts-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk-bundle
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - events
  - limitranges
  - persistentvolumeclaims
  - pods
  - pods/log
  - replicationcontrollers
  - resourcequotas
  - serviceaccounts
  - services
  verbs:
  - get
  - list
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda-sidecar-controllers
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk-bundle
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda-rpk-bundle
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - patch
  - update
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redpanda-sidecar-controllers
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 2222
          runAsUser: 1111
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 7777
          runAsNonRoot: true
          runAsUser: 8888
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      - args:
        - --operator-mode=false
        - --namespace=default
        - --health-probe-bind-address=:8085
        - --metrics-bind-address=:9082
        - --additional-controllers=all
        command:
        - /manager
        env:
        - name: REDPANDA_HELM_RELEASE_NAME
          value: redpanda
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: redpanda-controllers
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 1234
          runAsNonRoot: true
          runAsUser: 5678
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 2222
          runAsNonRoot: null
          runAsUser: 1111
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 3333
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 2222
          runAsUser: 1111
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 3333
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/34-statefulset-sidecars-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-fs-validator
  namespace: default
stringData:
  fsValidator.sh: |-
    set -e
    EXPECTED_FS_TYPE=$1

    DATA_DIR="/var/lib/redpanda/data"
    TEST_FILE="testfile"

    echo "checking data directory exist..."
    if [ ! -d "${DATA_DIR}" ]; then
      echo "data directory does not exists, exiting"
      exit 1
    fi

    echo "checking filesystem type..."
    FS_TYPE=$(df -T $DATA_DIR  | tail -n +2 | awk '{print $2}')

    if [ "${FS_TYPE}" != "${EXPECTED_FS_TYPE}" ]; then
      echo "file system found to be ${FS_TYPE} when expected ${EXPECTED_FS_TYPE}"
      exit 1
    fi

    echo "checking if able to create a test file..."

    touch ${DATA_DIR}/${TEST_FILE}
    result=$(touch ${DATA_DIR}/${TEST_FILE} 2> /dev/null; echo $?)
    if [ "${result}" != "0" ]; then
      echo "could not write testfile, may not have write permission"
      exit 1
    fi

    echo "checking if able to delete a test file..."

    result=$(rm ${DATA_DIR}/${TEST_FILE} 2> /dev/null; echo $?)
    if [ "${result}" != "0" ]; then
      echo "could not delete testfile"
      exit 1
    fi

    echo "passed"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redpanda-sidecar-controllers
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
  namespace: default
rules:
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - patch
  - update
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sidecar-controllers
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: redpanda-sidecar-controllers
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/sh
        - -c
        - chown 101:101 -R /var/lib/redpanda/data
        image: busybox:latest
        name: set-datadir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/fs-validator/scripts/fsValidator.sh
          xfs & wait $!
        command:
        - /bin/sh
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: fs-validator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/secrets/fs-validator/scripts/
          name: redpanda-fs-validator
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: redpanda-fs-validator
        secret:
          defaultMode: 509
          secretName: redpanda-fs-validator
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/35-connectors-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    connect:
      clusters:
      - name: connectors
        password: ""
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        token: ""
        url: http://redpanda-connectors.default.svc.cluster.local:8083
        username: ""
      connectTimeout: 0
      enabled: true
      readTimeout: 0
      requestTimeout: 0
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/connectors/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: connectors
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: connectors
    helm.sh/chart: connectors-0.1.13
  name: redpanda-connectors
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: rest-api
    port: 8083
    protocol: TCP
    targetPort: 8083
  - name: prometheus
    port: 9404
    protocol: TCP
    targetPort: 9404
  selector:
    app.kubernetes.io/component: connectors
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: connectors
  sessionAffinity: None
  type: ClusterIP
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/charts/connectors/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: connectors
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: connectors
    helm.sh/chart: connectors-0.1.13
  name: redpanda-connectors
spec:
  progressDeadlineSeconds: 600
  replicas: null
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: connectors
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: connectors
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: connectors
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: connectors
    spec:
      affinity:
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: connectors
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: connectors
            namespaces:
            - default
            topologyKey: kubernetes.io/hostname
      containers:
      - command: null
        env:
        - name: CONNECT_CONFIGURATION
          value: |-
            rest.advertised.port=8083
            rest.port=8083
            key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
            value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
            group.id=connectors-cluster
            offset.storage.topic=_internal_connectors_offsets
            config.storage.topic=_internal_connectors_configs
            status.storage.topic=_internal_connectors_status
            offset.storage.redpanda.remote.read=false
            offset.storage.redpanda.remote.write=false
            config.storage.redpanda.remote.read=false
            config.storage.redpanda.remote.write=false
            status.storage.redpanda.remote.read=false
            status.storage.redpanda.remote.write=false
            offset.storage.replication.factor=-1
            config.storage.replication.factor=-1
            status.storage.replication.factor=-1
            producer.linger.ms=1
            producer.batch.size=131072
            config.providers=file,secretsManager,env
            config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider
            config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
        - name: CONNECT_ADDITIONAL_CONFIGURATION
          value: ""
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: ""
        - name: CONNECT_GC_LOG_ENABLED
          value: "false"
        - name: CONNECT_HEAP_OPTS
          value: -Xms256M -Xmx2G
        - name: CONNECT_LOG_LEVEL
          value: warn
        - name: CONNECT_TLS_ENABLED
          value: "false"
        envFrom: []
        image: docker.redpanda.com/redpandadata/connectors:v1.0.31
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: rest-api
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: connectors-cluster
        ports:
        - containerPort: 8083
          name: rest-api
          protocol: TCP
        - containerPort: 9404
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /connectors
            port: rest-api
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 2350Mi
          requests:
            cpu: "1"
            memory: 2350Mi
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: rp-connect-tmp
      dnsPolicy: ClusterFirst
      imagePullSecrets: []
      nodeSelector: {}
      restartPolicy: Always
      schedulerName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 101
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: connectors
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: connectors
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 5Mi
        name: rp-connect-tmp
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: b22919d0130d0b5d8d29e11d30b2119a0639739f5643b7ce1e9f94e38de30c6e
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/36-single-external-address-with-template-domain-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.REDPANDAREDPANDAREDPANDA-testing\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.REDPANDAREDPANDAREDPANDA-testing\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.REDPANDAREDPANDAREDPANDA-testing\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.REDPANDAREDPANDAREDPANDA-testing\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.REDPANDAREDPANDAREDPANDA-testing\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}.REDPANDAREDPANDAREDPANDA-testing\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0.REDPANDAREDPANDAREDPANDA-testing:31644
      - redpanda-1.REDPANDAREDPANDAREDPANDA-testing:31644
      - redpanda-2.REDPANDAREDPANDAREDPANDA-testing:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0.REDPANDAREDPANDAREDPANDA-testing:31092
      - redpanda-1.REDPANDAREDPANDAREDPANDA-testing:31092
      - redpanda-2.REDPANDAREDPANDAREDPANDA-testing:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 8a071be3bb8ba18f61cddbee0860c7626f94ef0b565f4903e8e43b71f66fe8da
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - REDPANDAREDPANDAREDPANDA-testing
  - '*.REDPANDAREDPANDAREDPANDA-testing'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  - REDPANDAREDPANDAREDPANDA-testing
  - '*.REDPANDAREDPANDAREDPANDA-testing'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/37-internal-service-changed-name-and-annotations-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
      test: test
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.change-name.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.change-name.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.change-name.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.change-name.default.svc.cluster.local.:9093
      - redpanda-1.change-name.default.svc.cluster.local.:9093
      - redpanda-2.change-name.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.change-name.default.svc.cluster.local.:8081
        - https://redpanda-1.change-name.default.svc.cluster.local.:8081
        - https://redpanda-2.change-name.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://change-name.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.change-name.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.change-name.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.change-name.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.change-name.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.change-name.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.change-name.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.change-name.default.svc.cluster.local.:9644
        - redpanda-1.change-name.default.svc.cluster.local.:9644
        - redpanda-2.change-name.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.change-name.default.svc.cluster.local.:9093
        - redpanda-1.change-name.default.svc.cluster.local.:9093
        - redpanda-2.change-name.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.change-name.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.change-name.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.change-name.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: change-name-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
    test: test
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    test: test
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "true"
  name: change-name
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
    test: test
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 1173e85b7289a3ba46f9dffa93e6bbdce0f1f3663a87d6a743ab682692a93e5f
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      test: test
  serviceName: change-name
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 74897fe98938f7e3c3b0f56587a2886d3c40d29465b63f3b6749e8140e76cadb
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
        test: test
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
                test: test
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).change-name.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.change-name.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.change-name.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
            test: test
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.change-name.default.svc.cluster.local
  - redpanda-cluster.change-name.default.svc
  - redpanda-cluster.change-name.default
  - '*.redpanda-cluster.change-name.default.svc.cluster.local'
  - '*.redpanda-cluster.change-name.default.svc'
  - '*.redpanda-cluster.change-name.default'
  - change-name.default.svc.cluster.local
  - change-name.default.svc
  - change-name.default
  - '*.change-name.default.svc.cluster.local'
  - '*.change-name.default.svc'
  - '*.change-name.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.change-name.default.svc.cluster.local
  - redpanda-cluster.change-name.default.svc
  - redpanda-cluster.change-name.default
  - '*.redpanda-cluster.change-name.default.svc.cluster.local'
  - '*.redpanda-cluster.change-name.default.svc'
  - '*.redpanda-cluster.change-name.default'
  - change-name.default.svc.cluster.local
  - change-name.default.svc
  - change-name.default
  - '*.change-name.default.svc.cluster.local'
  - '*.change-name.default.svc'
  - '*.change-name.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  endpoints:
  - enableHttp2: null
    interval: 2m
    path: /public_metrics
    port: admin
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector: {}
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      monitoring.redpanda.com/enabled: "true"
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/38-post-install-upgrade-merges-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 1000
          runAsNonRoot: null
          runAsUser: 1000
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations:
      - effect: NoSchedule
        key: example-key
        operator: Exists
      - effect: NoExecute
        key: example-key-2
        operator: Exists
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - arctic-east1
                - arctic-west1
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources:
          limits:
            cpu: 200m
          requests:
            cpu: 2
        securityContext:
          runAsGroup: 1000
          runAsUser: 2000
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations:
      - effect: NoSchedule
        key: example-key
        operator: Exists
      - effect: NoExecute
        key: example-key-2
        operator: Exists
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/38-post-install-upgrade-no-overrides-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 1000
          runAsNonRoot: null
          runAsUser: 1000
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations:
      - effect: NoSchedule
        key: example-key
        operator: Exists
      - effect: NoExecute
        key: example-key-2
        operator: Exists
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - antarctica-east1
                - antarctica-west1
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 2
            memory: 2Gi
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations:
      - effect: NoSchedule
        key: example-key
        operator: Exists
      - effect: NoExecute
        key: example-key-2
        operator: Exists
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/39-default-image-pull-secrets-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets:
      - name: secret-1
      - name: secret-2
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets:
      - name: secret-1
      - name: secret-2
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/40-empty-string-tls-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="http://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail  ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent  ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9092}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 5368709120
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        authentication_method: none
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls: null
    pandaproxy_client:
      broker_tls:
        cert_file: /etc/tls/certs/redpanda-client/tls.crt
        enabled: true
        key_file: /etc/tls/certs/redpanda-client/tls.key
        require_client_auth: true
        truststore_file: /etc/tls/certs/kafka-internal-0/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9092
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9092
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9092
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls: null
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        authentication_method: none
        name: internal
        port: 9092
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/kafka-internal-0/tls.crt
        enabled: true
        key_file: /etc/tls/certs/kafka-internal-0/tls.key
        name: internal
        require_client_auth: true
        truststore_file: /etc/tls/certs/kafka-internal-0/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=trace
      - --memory=1638M
      - --reserve-memory=204M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls: null
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9092
        - redpanda-1.redpanda.default.svc.cluster.local.:9092
        - redpanda-2.redpanda.default.svc.cluster.local.:9092
        tls:
          ca_file: /etc/tls/certs/kafka-internal-0/ca.crt
          cert_file: /etc/tls/certs/redpanda-client/tls.crt
          key_file: /etc/tls/certs/redpanda-client/tls.key
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        cert_file: /etc/tls/certs/redpanda-client/tls.crt
        enabled: true
        key_file: /etc/tls/certs/redpanda-client/tls.key
        require_client_auth: true
        truststore_file: /etc/tls/certs/kafka-internal-0/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9092
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9092
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9092
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls: null
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
        cert_file: /etc/tls/certs/redpanda-client/tls.crt
        key_file: /etc/tls/certs/redpanda-client/tls.key
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9092
    protocol: TCP
    targetPort: 9092
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 6eaedb1adcde57ccc0c782d6ee07a9ef5318a4ae5881dc754a1ac1610a56b975
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.2
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9092
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 1
            memory: 2Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.2
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.2
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.2
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: redpanda-kafka-internal-0-cert
        secret:
          defaultMode: 288
          secretName: redpanda-kafka-internal-0-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
    status: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-root-certificate
  namespace: default
spec:
  commonName: redpanda-kafka-internal-0-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-kafka-internal-0-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-kafka-internal-0-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-kafka-internal-0-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-kafka-internal-0-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-client
spec:
  commonName: redpanda-client
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-kafka-internal-0-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-client
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-kafka-internal-0-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: redpanda-kafka-internal-0-cert
        secret:
          defaultMode: 288
          secretName: redpanda-kafka-internal-0-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/41-external-issuers-novalues.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames: null
  duration: 43800h
  isCA: false
  issuerRef:
    group: cas-issuer.jetstack.io
    kind: GoogleCASClusterIssuer
    name: my-cas-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames: null
  duration: 43800h
  isCA: false
  issuerRef:
    group: cas-issuer.jetstack.io
    kind: GoogleCASClusterIssuer
    name: my-cas-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/96-audit-logging-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done
      # Setup and export SASL bootstrap-user
      IFS=":" read -r USER_NAME PASSWORD MECHANISM < <(grep "" $(find /etc/secrets/users/* -print))
      MECHANISM=${MECHANISM:-SCRAM-SHA-512}
      rpk acl user create ${USER_NAME} -p {PASSWORD} --mechanism ${MECHANISM} || true

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-users
  namespace: default
stringData:
  users.txt: admin:change-me:SCRAM-SHA-512
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    while true; do
      echo "RUNNING: Monitoring and Updating SASL users"
      USERS_DIR="/etc/secrets/users"

      new_users_list(){
        LIST=$1
        NEW_USER=$2
        if [[ -n "${LIST}" ]]; then
          LIST="${NEW_USER},${LIST}"
        else
          LIST="${NEW_USER}"
        fi

        echo "${LIST}"
      }

      process_users() {
        USERS_DIR=${1-"/etc/secrets/users"}
        USERS_FILE=$(find ${USERS_DIR}/* -print)
        USERS_LIST="kubernetes-controller"
        READ_LIST_SUCCESS=0
        # Read line by line, handle a missing EOL at the end of file
        while read p || [ -n "$p" ] ; do
          IFS=":" read -r USER_NAME PASSWORD MECHANISM <<< $p
          # Do not process empty lines
          if [ -z "$USER_NAME" ]; then
            continue
          fi
          if [[ "${USER_NAME// /}" != "$USER_NAME" ]]; then
            continue
          fi
          echo "Creating user ${USER_NAME}..."
          MECHANISM=${MECHANISM:-SCRAM-SHA-512}
          creation_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
          if [[ $creation_result_exit_code -ne 0 ]]; then
            # Check if the stderr contains "User already exists"
            # this error occurs when password has changed
            if [[ $creation_result == *"User already exists"* ]]; then
              echo "Update user ${USER_NAME}"
              # we will try to update by first deleting
              deletion_result=$(rpk acl user delete ${USER_NAME} 2>&1) && deletion_result_exit_code=$? || deletion_result_exit_code=$?
              if [[ $deletion_result_exit_code -ne 0 ]]; then
                echo "deletion of user ${USER_NAME} failed: ${deletion_result}"
                READ_LIST_SUCCESS=1
                break
              fi
              # Now we update the user
              update_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && update_result_exit_code=$? || update_result_exit_code=$?  # On a non-success exit code
              if [[ $update_result_exit_code -ne 0 ]]; then
                echo "updating user ${USER_NAME} failed: ${update_result}"
                READ_LIST_SUCCESS=1
                break
              else
                echo "Updated user ${USER_NAME}..."
                USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
              fi
            else
              # Another error occurred, so output the original message and exit code
              echo "error creating user ${USER_NAME}: ${creation_result}"
              READ_LIST_SUCCESS=1
              break
            fi
          # On a success, the user was created so output that
          else
            echo "Created user ${USER_NAME}..."
            USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
          fi
        done < $USERS_FILE

        if [[ -n "${USERS_LIST}" && ${READ_LIST_SUCCESS} ]]; then
          echo "Setting superusers configurations with users [${USERS_LIST}]"
          superuser_result=$(rpk cluster config set superusers [${USERS_LIST}] 2>&1) && superuser_result_exit_code=$? || superuser_result_exit_code=$?
          if [[ $superuser_result_exit_code -ne 0 ]]; then
              echo "Setting superusers configurations failed: ${superuser_result}"
          else
              echo "Completed setting superusers configurations"
          fi
        fi
      }

      # before we do anything ensure we have the bootstrap user
      echo "Ensuring bootstrap user ${RPK_USER}..."
      creation_result=$(rpk acl user create ${RPK_USER} -p ${RPK_PASS} --mechanism ${RPK_SASL_MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
      if [[ $creation_result_exit_code -ne 0 ]]; then
        if [[ $creation_result == *"User already exists"* ]]; then
          echo "Bootstrap user already created"
        else
          echo "error creating user ${RPK_USER}: ${creation_result}"
        fi
      fi

      # first time processing
      process_users $USERS_DIR

      # subsequent changes detected here
      # watching delete_self as documented in https://ahmet.im/blog/kubernetes-inotify/
      USERS_FILE=$(find ${USERS_DIR}/* -print)
      while RES=$(inotifywait -q -e delete_self ${USERS_FILE}); do
        process_users $USERS_DIR
      done
    done
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-bootstrap-user
  namespace: default
stringData:
  password: changeme
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: true
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: true
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    cluster_id: cluster-id-test
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: true
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: true
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
    superusers:
    - kubernetes-controller
    - admin
  redpanda.yaml: |-
    audit_log_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8082
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        authentication_method: sasl
        name: internal
        port: 9093
      - address: 0.0.0.0
        authentication_method: sasl
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8081
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 4007d2775ef209d95445aae9091252dbc6a59caa90054071c08682609ab4d5f0
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command:
        - sh
        - -c
        - set -e; IFS=':' read -r KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM
          < <(grep "" $(find /mnt/users/* -print)); KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM:-SCRAM-SHA-512};
          export KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM;  export
          KAFKA_SCHEMAREGISTRY_USERNAME=$KAFKA_SASL_USERNAME;  export KAFKA_SCHEMAREGISTRY_PASSWORD=$KAFKA_SASL_PASSWORD;  export
          REDPANDA_ADMINAPI_USERNAME=$KAFKA_SASL_USERNAME;  export REDPANDA_ADMINAPI_PASSWORD=$KAFKA_SASL_PASSWORD;  /app/console
          $@
        - --
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/users
          name: redpanda-users
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: redpanda-users
        secret:
          secretName: redpanda-users
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 23396392115ac9f85ee171a7c191b95ee843787398666715e9cc58156c290ce4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: redpanda-users
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_LICENSE}
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: redpanda-users
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/97-license-key-values.yaml.tpl.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ${REDPANDA_LICENSE}
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ${REDPANDA_LICENSE}
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/98-license-secret-values.yaml.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: license-key
              name: redpanda-license
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          valueFrom:
            secretKeyRef:
              key: license-key
              name: redpanda-license
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/99-none-existent-config-options-with-empty-values.yaml.yaml.golden --
---
# Source: redpanda/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"
    cp /tmp/base-config/bootstrap.yaml /etc/redpanda/.bootstrap.yaml

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/configmap.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_access_key: test
    cloud_storage_bucket: test
    cloud_storage_cache_size: "11000000000"
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: true
    cloud_storage_region: test
    cloud_storage_secret_key: test
    compacted_log_segment_size: 67108864
    enable_idempotence: false
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/configmap.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/service.internal.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/service.nodeport.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: TEST
          value: test
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: license-key
              name: redpanda-license
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
        - mountPath: /mnt/test
          name: redpanda-license
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: redpanda-license
        secret:
          defaultMode: 272
          secretName: redpanda-license
---
# Source: redpanda/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.3
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.3
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: redpanda
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.3
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.3
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: redpanda
      - command:
        - /bin/sh
        - -c
        - mkdir -p /var/lib/redpanda/data/cloud_storage_cache; chown 101:101 -R /var/lib/redpanda/data/cloud_storage_cache
        image: busybox:latest
        name: set-tiered-storage-cache-dir-ownership
        resources: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /var/lib/redpanda/data/cloud_storage_cache
          name: tiered-storage-dir
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.3
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: redpanda
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: redpanda
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
      - emptyDir:
          sizeLimit: 11G
        name: tiered-storage-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/cert-issuers.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/cert-issuers.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/certs.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/certs.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/cert-issuers.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/cert-issuers.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/cert-issuers.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/cert-issuers.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/post-install-upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      containers:
      - args:
        - |
          set -e
          if [[ -n "$REDPANDA_LICENSE" ]] then
            rpk cluster license set "$REDPANDA_LICENSE"
          fi




          rpk cluster config export -f /tmp/cfg.yml


          for KEY in "${!RPK_@}"; do
            if ! [[ "$KEY" =~ ^(RPK_USER|RPK_PASS|RPK_SASL_MECHANISM)$ ]]; then
              config="${KEY#*RPK_}"
              rpk redpanda config set --config /tmp/cfg.yml "${config,,}" "${!KEY}"
            fi
          done


          rpk cluster config import -f /tmp/cfg.yml
        command:
        - bash
        - -c
        env:
        - name: REDPANDA_LICENSE
          valueFrom:
            secretKeyRef:
              key: license-key
              name: redpanda-license
        - name: RPK_CLOUD_STORAGE_SECRET_KEY
          value: test
        - name: RPK_CLOUD_STORAGE_ACCESS_KEY
          value: test
        - name: RPK_CLOUD_STORAGE_BUCKET
          value: test
        - name: RPK_CLOUD_STORAGE_CACHE_SIZE
          value: "11000000000"
        - name: RPK_CLOUD_STORAGE_ENABLE_REMOTE_READ
          value: "true"
        - name: RPK_CLOUD_STORAGE_ENABLE_REMOTE_WRITE
          value: "true"
        - name: RPK_CLOUD_STORAGE_ENABLED
          value: "true"
        - name: RPK_CLOUD_STORAGE_REGION
          value: test
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.3
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
      imagePullSecrets: null
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - configMap:
          name: redpanda
        name: config
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
---
# Source: redpanda/templates/post-upgrade.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-10"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.3
  name: redpanda-post-upgrade
  namespace: default
spec:
  backoffLimit: null
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-post-upgrade
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: redpanda
    spec:
      affinity: {}
      containers:
      - args:
        - |
          set -e

          rpk cluster config set default_topic_replications 3
          rpk cluster config set storage_min_free_bytes 1073741824
          if [ -d "/etc/secrets/users/" ]; then
              IFS=":" read -r USER_NAME PASSWORD MECHANISM < <(grep "" $(find /etc/secrets/users/* -print))
              curl -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors --ssl-reqd \
              --cacert "/etc/tls/certs/default/ca.crt" \
              -X PUT -u ${USER_NAME}:${PASSWORD} \
              https://redpanda.default.svc.cluster.local.:9644/v1/debug/restart_service?service=schema-registry || true
          fi
        command:
        - /bin/bash
        - -c
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.3
        name: post-upgrade
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
      imagePullSecrets: null
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: []
      volumes:
      - configMap:
          name: redpanda
        name: config
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
-- testdata/TestTemplate/allowpriviledgeescalation-regression.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/allowprivilegeescalation-regression.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/app-protocol-regression.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: http
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-sasl-mechanism-regression.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done
      # Setup and export SASL bootstrap-user
      IFS=":" read -r USER_NAME PASSWORD MECHANISM < <(grep "" $(find /etc/secrets/users/* -print))
      MECHANISM=${MECHANISM:-SCRAM-SHA-512}
      rpk acl user create ${USER_NAME} -p {PASSWORD} --mechanism ${MECHANISM} || true

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-users
  namespace: default
stringData:
  users.txt: |-
    empty-mechanism:valid
    mechanism-256:valid:SCRAM-SHA-256
    mechanism-512:valid:SCRAM-SHA-512
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    while true; do
      echo "RUNNING: Monitoring and Updating SASL users"
      USERS_DIR="/etc/secrets/users"

      new_users_list(){
        LIST=$1
        NEW_USER=$2
        if [[ -n "${LIST}" ]]; then
          LIST="${NEW_USER},${LIST}"
        else
          LIST="${NEW_USER}"
        fi

        echo "${LIST}"
      }

      process_users() {
        USERS_DIR=${1-"/etc/secrets/users"}
        USERS_FILE=$(find ${USERS_DIR}/* -print)
        USERS_LIST="kubernetes-controller"
        READ_LIST_SUCCESS=0
        # Read line by line, handle a missing EOL at the end of file
        while read p || [ -n "$p" ] ; do
          IFS=":" read -r USER_NAME PASSWORD MECHANISM <<< $p
          # Do not process empty lines
          if [ -z "$USER_NAME" ]; then
            continue
          fi
          if [[ "${USER_NAME// /}" != "$USER_NAME" ]]; then
            continue
          fi
          echo "Creating user ${USER_NAME}..."
          MECHANISM=${MECHANISM:-SCRAM-SHA-512}
          creation_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
          if [[ $creation_result_exit_code -ne 0 ]]; then
            # Check if the stderr contains "User already exists"
            # this error occurs when password has changed
            if [[ $creation_result == *"User already exists"* ]]; then
              echo "Update user ${USER_NAME}"
              # we will try to update by first deleting
              deletion_result=$(rpk acl user delete ${USER_NAME} 2>&1) && deletion_result_exit_code=$? || deletion_result_exit_code=$?
              if [[ $deletion_result_exit_code -ne 0 ]]; then
                echo "deletion of user ${USER_NAME} failed: ${deletion_result}"
                READ_LIST_SUCCESS=1
                break
              fi
              # Now we update the user
              update_result=$(rpk acl user create ${USER_NAME} -p ${PASSWORD} --mechanism ${MECHANISM} 2>&1) && update_result_exit_code=$? || update_result_exit_code=$?  # On a non-success exit code
              if [[ $update_result_exit_code -ne 0 ]]; then
                echo "updating user ${USER_NAME} failed: ${update_result}"
                READ_LIST_SUCCESS=1
                break
              else
                echo "Updated user ${USER_NAME}..."
                USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
              fi
            else
              # Another error occurred, so output the original message and exit code
              echo "error creating user ${USER_NAME}: ${creation_result}"
              READ_LIST_SUCCESS=1
              break
            fi
          # On a success, the user was created so output that
          else
            echo "Created user ${USER_NAME}..."
            USERS_LIST=$(new_users_list "${USERS_LIST}" "${USER_NAME}")
          fi
        done < $USERS_FILE

        if [[ -n "${USERS_LIST}" && ${READ_LIST_SUCCESS} ]]; then
          echo "Setting superusers configurations with users [${USERS_LIST}]"
          superuser_result=$(rpk cluster config set superusers [${USERS_LIST}] 2>&1) && superuser_result_exit_code=$? || superuser_result_exit_code=$?
          if [[ $superuser_result_exit_code -ne 0 ]]; then
              echo "Setting superusers configurations failed: ${superuser_result}"
          else
              echo "Completed setting superusers configurations"
          fi
        fi
      }

      # before we do anything ensure we have the bootstrap user
      echo "Ensuring bootstrap user ${RPK_USER}..."
      creation_result=$(rpk acl user create ${RPK_USER} -p ${RPK_PASS} --mechanism ${RPK_SASL_MECHANISM} 2>&1) && creation_result_exit_code=$? || creation_result_exit_code=$?  # On a non-success exit code
      if [[ $creation_result_exit_code -ne 0 ]]; then
        if [[ $creation_result == *"User already exists"* ]]; then
          echo "Bootstrap user already created"
        else
          echo "error creating user ${RPK_USER}: ${creation_result}"
        fi
      fi

      # first time processing
      process_users $USERS_DIR

      # subsequent changes detected here
      # watching delete_self as documented in https://ahmet.im/blog/kubernetes-inotify/
      USERS_FILE=$(find ${USERS_DIR}/* -print)
      while RES=$(inotifywait -q -e delete_self ${USERS_FILE}); do
        process_users $USERS_DIR
      done
    done
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-bootstrap-user
  namespace: default
stringData:
  password: changeme
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: true
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: true
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: true
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
    superusers:
    - kubernetes-controller
    - empty-mechanism
    - mechanism-256
    - mechanism-512
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8082
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        authentication_method: sasl
        name: internal
        port: 9093
      - address: 0.0.0.0
        authentication_method: sasl
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        authentication_method: http_basic
        name: internal
        port: 8081
      - address: 0.0.0.0
        authentication_method: http_basic
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 4007d2775ef209d95445aae9091252dbc6a59caa90054071c08682609ab4d5f0
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command:
        - sh
        - -c
        - set -e; IFS=':' read -r KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM
          < <(grep "" $(find /mnt/users/* -print)); KAFKA_SASL_MECHANISM=${KAFKA_SASL_MECHANISM:-SCRAM-SHA-512};
          export KAFKA_SASL_USERNAME KAFKA_SASL_PASSWORD KAFKA_SASL_MECHANISM;  export
          KAFKA_SCHEMAREGISTRY_USERNAME=$KAFKA_SASL_USERNAME;  export KAFKA_SCHEMAREGISTRY_PASSWORD=$KAFKA_SASL_PASSWORD;  export
          REDPANDA_ADMINAPI_USERNAME=$KAFKA_SASL_USERNAME;  export REDPANDA_ADMINAPI_PASSWORD=$KAFKA_SASL_PASSWORD;  /app/console
          $@
        - --
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/users
          name: redpanda-users
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: redpanda-users
        secret:
          secretName: redpanda-users
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 28635308956eb868571a78176e97bf20e3aea3e52b96a6db473701f567a1229a
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: redpanda-users
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: RPK_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: redpanda-bootstrap-user
        - name: RPK_USER
          value: kubernetes-controller
        - name: RPK_SASL_MECHANISM
          value: SCRAM-SHA-256
        - name: RP_BOOTSTRAP_USER
          value: $(RPK_USER):$(RPK_PASS):$(RPK_SASL_MECHANISM)
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/secrets/users
          name: users
          readOnly: true
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: users
        secret:
          secretName: redpanda-users
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v22.1.0-0.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Error: The Redpanda version (22.1.0) is no longer supported 
To accept this risk, run the upgrade again adding `--force=true`

-- testdata/TestTemplate/default-v22.1.0-1.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Error: The Redpanda version (22.1.0) is no longer supported 
To accept this risk, run the upgrade again adding `--force=true`

-- testdata/TestTemplate/default-v22.1.0-2.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Error: The Redpanda version (22.1.0) is no longer supported 
To accept this risk, run the upgrade again adding `--force=true`

-- testdata/TestTemplate/default-v22.2.0-0.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.2.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.2.0-1.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.2.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.2.0-2.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.2.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.3.0-0.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.3.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.3.0-1.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.3.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.3.0-2.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.3.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.3.14-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v22.3.14-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v22.3.14-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v22.3.14
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v22.4.0-0.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.4.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.4.0-1.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.4.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v22.4.0-2.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v22.4.0 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v23.1.1-0.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v23.1.1 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v23.1.1-1.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v23.1.1 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v23.1.1-2.yaml.golden --
execution error at (redpanda/templates/entry-point.yaml:17:4): Redpanda version v23.1.1 does not support TLS on the RPC port. Please upgrade. See technical service bulletin 2023-01.
-- testdata/TestTemplate/default-v23.1.2-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.1.2-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.1.2-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.1.3-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.1.3-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.1.3-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.3
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.2.1-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.2.1-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.2.1-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.2.1
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.3.0-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.3.0-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v23.3.0-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v24.1.0-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v24.1.0-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/default-v24.1.0-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/disable-cert-manager-overriding-defaults.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: some-secret
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: some-secret
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: some-secret
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: some-secret
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: some-other-secret
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: some-secret
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: some-other-secret
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/disable-cert-manger-fully-specified.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/for-internal/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/for-internal/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/for-internal/tls.crt
        enabled: true
        key_file: /etc/tls/certs/for-internal/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/ssl/certs/ca-certificates.crt
      - cert_file: /etc/tls/certs/for-external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/for-external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/ssl/certs/ca-certificates.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/for-internal/tls.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/for-internal/tls.crt
        enabled: true
        key_file: /etc/tls/certs/for-internal/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/ssl/certs/ca-certificates.crt
      - cert_file: /etc/tls/certs/for-external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/for-external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/ssl/certs/ca-certificates.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/for-internal/tls.crt
        enabled: true
        key_file: /etc/tls/certs/for-internal/tls.key
        require_client_auth: false
        truststore_file: /etc/ssl/certs/ca-certificates.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/for-internal/tls.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/for-internal/tls.crt
        enabled: true
        key_file: /etc/tls/certs/for-internal/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/ssl/certs/ca-certificates.crt
      - cert_file: /etc/tls/certs/for-external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/for-external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/ssl/certs/ca-certificates.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/for-internal/tls.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 05b42942b3c17de0dc4a36c918f79702d8043e49e145165261299c2ec672d694
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env: []
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 8d5422857b81b1a6b6bed0dc6796ac593722e5ecfc73083e75ca7998f0f48e99
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/for-external
          name: redpanda-for-external-cert
        - mountPath: /etc/tls/certs/for-internal
          name: redpanda-for-internal-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/for-external
          name: redpanda-for-external-cert
        - mountPath: /etc/tls/certs/for-internal
          name: redpanda-for-internal-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/for-external
          name: redpanda-for-external-cert
        - mountPath: /etc/tls/certs/for-internal
          name: redpanda-for-internal-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/for-external
          name: redpanda-for-external-cert
        - mountPath: /etc/tls/certs/for-internal
          name: redpanda-for-internal-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-for-external-cert
        secret:
          defaultMode: 288
          secretName: some-other-secret
      - name: redpanda-for-internal-cert
        secret:
          defaultMode: 288
          secretName: some-secret
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/for-external
          name: redpanda-for-external-cert
        - mountPath: /etc/tls/certs/for-internal
          name: redpanda-for-internal-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-for-external-cert
        secret:
          defaultMode: 288
          secretName: some-other-secret
      - name: redpanda-for-internal-cert
        secret:
          defaultMode: 288
          secretName: some-secret
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/enable-connectors.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    connect:
      clusters:
      - name: connectors
        password: ""
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        token: ""
        url: http://redpanda-connectors.default.svc.cluster.local:8083
        username: ""
      connectTimeout: 0
      enabled: true
      readTimeout: 0
      requestTimeout: 0
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/connectors/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: connectors
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: connectors
    helm.sh/chart: connectors-0.1.13
  name: redpanda-connectors
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: rest-api
    port: 8083
    protocol: TCP
    targetPort: 8083
  - name: prometheus
    port: 9404
    protocol: TCP
    targetPort: 9404
  selector:
    app.kubernetes.io/component: connectors
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: connectors
  sessionAffinity: None
  type: ClusterIP
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/connectors/connectors.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: connectors
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: connectors
    helm.sh/chart: connectors-0.1.13
  name: redpanda-connectors
spec:
  progressDeadlineSeconds: 600
  replicas: null
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: connectors
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: connectors
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: connectors
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: connectors
    spec:
      affinity:
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: connectors
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: connectors
            namespaces:
            - default
            topologyKey: kubernetes.io/hostname
      containers:
      - command: null
        env:
        - name: CONNECT_CONFIGURATION
          value: |-
            rest.advertised.port=8083
            rest.port=8083
            key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
            value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
            group.id=connectors-cluster
            offset.storage.topic=_internal_connectors_offsets
            config.storage.topic=_internal_connectors_configs
            status.storage.topic=_internal_connectors_status
            offset.storage.redpanda.remote.read=false
            offset.storage.redpanda.remote.write=false
            config.storage.redpanda.remote.read=false
            config.storage.redpanda.remote.write=false
            status.storage.redpanda.remote.read=false
            status.storage.redpanda.remote.write=false
            offset.storage.replication.factor=-1
            config.storage.replication.factor=-1
            status.storage.replication.factor=-1
            producer.linger.ms=1
            producer.batch.size=131072
            config.providers=file,secretsManager,env
            config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider
            config.providers.env.class=org.apache.kafka.common.config.provider.EnvVarConfigProvider
        - name: CONNECT_ADDITIONAL_CONFIGURATION
          value: ""
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: redpanda-0.redpanda.default.svc.cluster.local.:9093,redpanda-1.redpanda.default.svc.cluster.local.:9093,redpanda-2.redpanda.default.svc.cluster.local.:9093
        - name: CONNECT_GC_LOG_ENABLED
          value: "false"
        - name: CONNECT_HEAP_OPTS
          value: -Xms256M -Xmx2G
        - name: CONNECT_LOG_LEVEL
          value: warn
        - name: CONNECT_TLS_ENABLED
          value: "true"
        - name: CONNECT_TRUSTED_CERTS
          value: ca/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/connectors:v1.0.31
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: rest-api
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: connectors-cluster
        ports:
        - containerPort: 8083
          name: rest-api
          protocol: TCP
        - containerPort: 9404
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /connectors
            port: rest-api
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 2350Mi
          requests:
            cpu: "1"
            memory: 2350Mi
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/kafka/connect-certs/ca
          name: truststore
        - mountPath: /tmp
          name: rp-connect-tmp
      dnsPolicy: ClusterFirst
      imagePullSecrets: []
      nodeSelector: {}
      restartPolicy: Always
      schedulerName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
        runAsUser: 101
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: connectors
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: connectors
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: truststore
        secret:
          defaultMode: 292
          secretName: redpanda-default-cert
      - emptyDir:
          medium: Memory
          sizeLimit: 5Mi
        name: rp-connect-tmp
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: b22919d0130d0b5d8d29e11d30b2119a0639739f5643b7ce1e9f94e38de30c6e
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/connectors/connectors.yaml
apiVersion: v1
kind: Pod
metadata:
  name: redpanda-connectors-mm2-test
  namespace: "default"
  labels:
    app.kubernetes.io/component: connectors
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: connectors
    helm.sh/chart: connectors-0.1.13
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  restartPolicy: Never
  containers:
    - name: create-mm2
      image: docker.redpanda.com/redpandadata/redpanda:latest
      command:
        - /bin/bash
        - -c
        - |
          set -xe

          trap connectorsState ERR

          connectorsState () {
            echo check connectors expand status
            curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  http://redpanda-connectors:8083/connectors?expand=status
            echo check connectors expand info
            curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  http://redpanda-connectors:8083/connectors?expand=info
            echo check connector configuration
            curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  http://redpanda-connectors:8083/connectors/$CONNECTOR_NAME
            echo check connector topics
            curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  http://redpanda-connectors:8083/connectors/$CONNECTOR_NAME/topics
          }

          curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  http://redpanda-connectors:8083/connectors

          SASL_MECHANISM="PLAIN"

          rpk profile create test
          rpk profile set tls.enabled=true brokers=redpanda-0.redpanda.default.svc.cluster.local.:9093,redpanda-1.redpanda.default.svc.cluster.local.:9093,redpanda-2.redpanda.default.svc.cluster.local.:9093
          rpk profile set tls.ca=/redpanda-certs/ca.crt
          CONNECT_TLS_ENABLED=true
          SECURITY_PROTOCOL=PLAINTEXT
          if [[ -n "$CONNECT_SASL_MECHANISM" && $CONNECT_TLS_ENABLED == "true" ]]; then
            SECURITY_PROTOCOL="SASL_SSL"
          elif [[ -n "$CONNECT_SASL_MECHANISM" ]]; then
            SECURITY_PROTOCOL="SASL_PLAINTEXT"
          elif [[ $CONNECT_TLS_ENABLED == "true" ]]; then
            SECURITY_PROTOCOL="SSL"
          fi

          rpk topic list
          rpk topic create test-topic
          rpk topic list
          echo "Test message!" | rpk topic produce test-topic

          CONNECTOR_NAME=mm2-$RANDOM
          cat << 'EOF' > /tmp/mm2-conf.json
          {
            "name": "CONNECTOR_NAME",
            "config": {
              "connector.class": "org.apache.kafka.connect.mirror.MirrorSourceConnector",
              "topics": "test-topic",
              "replication.factor": "1",
              "tasks.max": "1",
              "source.cluster.bootstrap.servers": "redpanda-0.redpanda.default.svc.cluster.local.:9093,redpanda-1.redpanda.default.svc.cluster.local.:9093,redpanda-2.redpanda.default.svc.cluster.local.:9093",
              "target.cluster.bootstrap.servers": "redpanda-0.redpanda.default.svc.cluster.local.:9093,redpanda-1.redpanda.default.svc.cluster.local.:9093,redpanda-2.redpanda.default.svc.cluster.local.:9093",
              "target.cluster.alias": "test-only",
              "source.cluster.alias": "source",
              "key.converter": "org.apache.kafka.connect.converters.ByteArrayConverter",
              "value.converter": "org.apache.kafka.connect.converters.ByteArrayConverter",
              "source->target.enabled": "true",
              "target->source.enabled": "false",
              "sync.topic.configs.interval.seconds": "5",
              "sync.topics.configs.enabled": "true",
              "source.cluster.ssl.truststore.type": "PEM",
              "target.cluster.ssl.truststore.type": "PEM",
              "source.cluster.ssl.truststore.location": "/opt/kafka/connect-certs/ca/ca.crt",
              "target.cluster.ssl.truststore.location": "/opt/kafka/connect-certs/ca/ca.crt",
              JAAS_CONFIG_SOURCE
              JAAS_CONFIG_TARGET
              "source.cluster.security.protocol": "SECURITY_PROTOCOL",
              "target.cluster.security.protocol": "SECURITY_PROTOCOL",
              "source.cluster.sasl.mechanism": "SASL_MECHANISM",
              "target.cluster.sasl.mechanism": "SASL_MECHANISM",
              "offset-syncs.topic.replication.factor": 1
            }
          }
          EOF

          sed -i "s/CONNECTOR_NAME/$CONNECTOR_NAME/g" /tmp/mm2-conf.json
          sed -i "s/SASL_MECHANISM/$SASL_MECHANISM/g" /tmp/mm2-conf.json
          sed -i "s/SECURITY_PROTOCOL/$SECURITY_PROTOCOL/g" /tmp/mm2-conf.json
          set +x
          sed -i "s/JAAS_CONFIG_SOURCE/$JAAS_CONFIG_SOURCE/g" /tmp/mm2-conf.json
          sed -i "s/JAAS_CONFIG_TARGET/$JAAS_CONFIG_TARGET/g" /tmp/mm2-conf.json
          set -x

          curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  -H 'Content-Type: application/json' http://redpanda-connectors:8083/connectors -d @/tmp/mm2-conf.json

          # The rpk topic consume could fail for the first few times as kafka connect needs
          # to spawn the task and copy one message from the source topic. To solve this race condition
          # the retry should be implemented in bash for rpk topic consume or other mechanism that
          # can confirm source connectors started its execution. As a fast fix fixed 30 second fix is added.
          sleep 30

          rpk topic consume source.test-topic -n 1 | grep "Test message!"

          curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  -X DELETE http://redpanda-connectors:8083/connectors/$CONNECTOR_NAME

          curl  -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors -o - -w "\nstatus=%{http_code} %{redirect_url} size=%{size_download} time=%{time_total} content-type=\"%{content_type}\"\n"  http://redpanda-connectors:8083/connectors

          rpk topic delete test-topic source.test-topic mm2-offset-syncs.test-only.internal
      volumeMounts:
        - mountPath: /redpanda-certs
          name: redpanda-ca
        - mountPath: /tmp
          name: rp-connect-tmp
  volumes:
    - name: redpanda-ca
      secret:
        defaultMode: 0444
        secretName: redpanda-default-cert
    - emptyDir:
        medium: Memory
        sizeLimit: 5Mi
      name: rp-connect-tmp
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/internal-trust-stores.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"my-kafka\",\"port\":1234}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"my-kafka\",\"port\":1234}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"my-kafka\",\"port\":1234}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[2] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"my-http\",\"port\":1234}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"my-http\",\"port\":1234}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"my-http\",\"port\":1234}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[2] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      - address: 0.0.0.0
        name: my-http
        port: 1234
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/truststores/configmaps/http-cm-ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: my-http
        require_client_auth: false
        truststore_file: /etc/truststores/configmaps/http-cm-my-http.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      - address: 0.0.0.0
        name: my-admin
        port: 1234
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/truststores/configmaps/admin-cm-other.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: my-admin
        require_client_auth: false
        truststore_file: /etc/truststores/configmaps/admin-cm-my-admin.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      - address: 0.0.0.0
        name: my-kafka
        port: 1234
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/truststores/configmaps/my-ca-bundle-ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: my-kafka
        require_client_auth: false
        truststore_file: /etc/truststores/secrets/kafka-secret-my-kafka.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      - address: 0.0.0.0
        name: my-sr
        port: 1234
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/truststores/secrets/sr-secret-ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: my-sr
        require_client_auth: false
        truststore_file: /etc/truststores/secrets/sr-secret-my-sr.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: admin-my-admin
    nodePort: 1234
    port: 1234
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: kafka-my-kafka
    nodePort: 1234
    port: 1234
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: http-my-http
    nodePort: 1234
    port: 1234
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  - name: schema-my-sr
    nodePort: 1234
    port: 1234
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 6e0f606e90b04d9f98c75e7002b85b4c2b7f7bc728975da00c2b5716ba12c24e
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 1234
          name: admin-my-admin
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 1234
          name: http-my-http
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 1234
          name: kafka-my-kafka
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        - containerPort: 1234
          name: schema-my-sr
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
        - mountPath: /etc/truststores
          name: truststores
          readOnly: true
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: truststores
        projected:
          sources:
          - configMap:
              items:
              - key: other.crt
                path: configmaps/admin-cm-other.crt
              - key: my-admin.crt
                path: configmaps/admin-cm-my-admin.crt
              name: admin-cm
          - configMap:
              items:
              - key: ca.crt
                path: configmaps/http-cm-ca.crt
              - key: my-http.crt
                path: configmaps/http-cm-my-http.crt
              name: http-cm
          - configMap:
              items:
              - key: ca.crt
                path: configmaps/my-ca-bundle-ca.crt
              name: my-ca-bundle
          - secret:
              items:
              - key: my-kafka.crt
                path: secrets/kafka-secret-my-kafka.crt
              name: kafka-secret
          - secret:
              items:
              - key: ca.crt
                path: secrets/sr-secret-ca.crt
              - key: my-sr.crt
                path: secrets/sr-secret-my-sr.crt
              name: sr-secret
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/mtls-client-regression.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/kafka-internal-0/ca.crt
        certFilepath: /mnt/cert/kafka/kafka-internal-0/tls.crt
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: /mnt/cert/kafka/kafka-internal-0/tls.key
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        cert_file: /etc/tls/certs/redpanda-client/tls.crt
        enabled: true
        key_file: /etc/tls/certs/redpanda-client/tls.key
        require_client_auth: true
        truststore_file: /etc/tls/certs/kafka-internal-0/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        authentication_method: none
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/kafka-internal-0/tls.crt
        enabled: true
        key_file: /etc/tls/certs/kafka-internal-0/tls.key
        name: internal
        require_client_auth: true
        truststore_file: /etc/tls/certs/kafka-internal-0/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/kafka-internal-0/ca.crt
          cert_file: /etc/tls/certs/redpanda-client/tls.crt
          key_file: /etc/tls/certs/redpanda-client/tls.key
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        cert_file: /etc/tls/certs/redpanda-client/tls.crt
        enabled: true
        key_file: /etc/tls/certs/redpanda-client/tls.key
        require_client_auth: true
        truststore_file: /etc/tls/certs/kafka-internal-0/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
        cert_file: /etc/tls/certs/redpanda-client/tls.crt
        key_file: /etc/tls/certs/redpanda-client/tls.key
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 26fe8c5f310f568555877033931dddedfe7064bac17a33bce02c16287aba76c1
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/kafka-internal-0/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/kafka-internal-0
          name: kafka-kafka-internal-0-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-kafka-internal-0-cert
        secret:
          defaultMode: 272
          secretName: redpanda-kafka-internal-0-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 1bc3c10e6eec6e9d1f1fb78aec94ef2781c5bb6aa6d9579c07e7c4573b2e1876
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: redpanda-kafka-internal-0-cert
        secret:
          defaultMode: 288
          secretName: redpanda-kafka-internal-0-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-root-certificate
  namespace: default
spec:
  commonName: redpanda-kafka-internal-0-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-kafka-internal-0-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-kafka-internal-0-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-kafka-internal-0-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-kafka-internal-0-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-client
spec:
  commonName: redpanda-client
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-kafka-internal-0-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-client
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-kafka-internal-0-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-kafka-internal-0-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/tls/certs/kafka-internal-0
          name: redpanda-kafka-internal-0-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: redpanda-kafka-internal-0-cert
        secret:
          defaultMode: 288
          secretName: redpanda-kafka-internal-0-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/node-config-boolean-type-regression.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      developer_mode: true
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: 4d35b6ed55cc90695020a6726b0acbbe12aaa534620aa9cab133e129160e2257
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/service-monitor-with-tls-in-admin-api.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "true"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  endpoints:
  - enableHttp2: null
    interval: 30s
    path: /public_metrics
    port: admin
    scheme: https
    tlsConfig:
      ca: {}
      cert: {}
      insecureSkipVerify: true
  namespaceSelector: {}
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      monitoring.redpanda.com/enabled: "true"
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/service-monitor-without-tls-in-admin-api.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="http://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail  ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent  ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX}  ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: ""
          certFilepath: ""
          enabled: false
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - http://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls: null
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls: null
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls: null
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "true"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: dc3cccc1b9cdacf34f471ee60df90296f0ca10bd7f23de1cb5967216a21d614f
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: c6f48c8739b514c4b7fd7d39760fe94bd5a669efa9a7812124dd4c9bc9d712ec
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5  "http://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  endpoints:
  - enableHttp2: null
    interval: 30s
    path: /public_metrics
    port: admin
    scheme: http
  namespaceSelector: {}
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      monitoring.redpanda.com/enabled: "true"
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/somecustomrepo-v23.2.8-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: somecustomrepo:v23.2.8
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: somecustomrepo:v23.2.8
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: somecustomrepo:v23.2.8
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: somecustomrepo:v23.2.8
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/somecustomrepo-v23.2.8-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: somecustomrepo:v23.2.8
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: somecustomrepo:v23.2.8
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: somecustomrepo:v23.2.8
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: somecustomrepo:v23.2.8
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/somecustomrepo-v23.2.8-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: somecustomrepo:v23.2.8
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: somecustomrepo:v23.2.8
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: somecustomrepo:v23.2.8
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: somecustomrepo:v23.2.8
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/somecustomrepo-v24.1.0-0.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_batch_max_bytes: 7777
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 99999
    log_segment_size_min: 100
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: somecustomrepo:v24.1.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: somecustomrepo:v24.1.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: somecustomrepo:v24.1.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: somecustomrepo:v24.1.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/somecustomrepo-v24.1.0-1.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
stringData:
  enterprise-license: ATOTALLYVALIDLICENSE
  kafka-protobuf-git-basicauth-password: ""
  kafka-sasl-aws-msk-iam-secret-key: ""
  kafka-sasl-password: ""
  kafka-schema-registry-password: ""
  kafka-schemaregistry-tls-ca: ""
  kafka-schemaregistry-tls-cert: ""
  kafka-schemaregistry-tls-key: ""
  kafka-tls-ca: ""
  kafka-tls-cert: ""
  kafka-tls-key: ""
  login-github-oauth-client-secret: ""
  login-github-personal-access-token: ""
  login-google-groups-service-account.json: ""
  login-google-oauth-client-secret: ""
  login-jwt-secret: SECRETKEY
  login-oidc-client-secret: ""
  login-okta-client-secret: ""
  login-okta-directory-api-token: ""
  redpanda-admin-api-password: ""
  redpanda-admin-api-tls-ca: ""
  redpanda-admin-api-tls-cert: ""
  redpanda-admin-api-tls-key: ""
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        - name: LOGIN_JWTSECRET
          valueFrom:
            secretKeyRef:
              key: login-jwt-secret
              name: redpanda-console
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              key: enterprise-license
              name: redpanda-console
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /etc/console/secrets
          name: secrets
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: secrets
        secret:
          secretName: redpanda-console
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: somecustomrepo:v24.1.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: somecustomrepo:v24.1.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: somecustomrepo:v24.1.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: somecustomrepo:v24.1.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env:
        - name: REDPANDA_LICENSE
          value: ATOTALLYVALIDLICENSE
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/somecustomrepo-v24.1.0-2.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"

    # Configure Rack Awareness
    set +x
    RACK=$(curl --silent --cacert /run/secrets/kubernetes.io/serviceaccount/ca.crt --fail -H 'Authorization: Bearer '$(cat /run/secrets/kubernetes.io/serviceaccount/token) "https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT_HTTPS}/api/v1/nodes/${KUBERNETES_NODE_NAME}?pretty=true" | grep '"topology-label"' | grep -v '\"key\":' | sed 's/.*": "\([^"]\+\).*/\1/')
    set -x
    rpk --config "$CONFIG" redpanda config set redpanda.rack "${RACK}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: true
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: somecustomrepo:v24.1.0
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: somecustomrepo:v24.1.0
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: somecustomrepo:v24.1.0
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: somecustomrepo:v24.1.0
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
-- testdata/TestTemplate/trust-stores-ca-enabled.yaml.golden --
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
      redpanda.com/poddisruptionbudget: redpanda
---
# Source: redpanda/charts/console/templates/serviceaccount.yaml
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-sts-lifecycle
  namespace: default
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.default.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_PUT_CMD_PREFIX='curl -X PUT --silent -o /dev/null -w "%{http_code}"'
    CURL_MAINTENANCE_GET_CMD="curl -X GET --silent --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/maintenance"
  postStart.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    postStartHook () {
      set -x

      touch /tmp/postStartHookStarted

      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Clearing maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_DELETE_CMD="${CURL_MAINTENANCE_DELETE_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      # a 400 here would mean not in maintenance mode
      until [ "${status:-}" = '"200"' ] || [ "${status:-}" = '"400"' ]; do
          status=$(${CURL_MAINTENANCE_DELETE_CMD})
          sleep 0.5
      done

      touch /tmp/postStartHookFinished
    }

    postStartHook
    true
  preStop.sh: |-
    #!/usr/bin/env bash
    # This code should be similar if not exactly the same as that found in the panda-operator, see
    # https://github.com/redpanda-data/redpanda/blob/e51d5b7f2ef76d5160ca01b8c7a8cf07593d29b6/src/go/k8s/pkg/resources/secret.go

    touch /tmp/preStopHookStarted

    # path below should match the path defined on the statefulset
    source /var/lifecycle/common.sh

    set -x

    preStopHook () {
      until NODE_ID=$(${CURL_NODE_ID_CMD} | grep -o '\"node_id\":[^,}]*' | grep -o '[^: ]*$'); do
          sleep 0.5
      done

      echo "Setting maintenance mode on node ${NODE_ID}"
      CURL_MAINTENANCE_PUT_CMD="${CURL_MAINTENANCE_PUT_CMD_PREFIX} --cacert /etc/tls/certs/default/ca.crt ${CURL_URL}/v1/brokers/${NODE_ID}/maintenance"
      until [ "${status:-}" = '"200"' ]; do
          status=$(${CURL_MAINTENANCE_PUT_CMD})
          sleep 0.5
      done

      until [ "${finished:-}" = "true" ] || [ "${draining:-}" = "false" ]; do
          res=$(${CURL_MAINTENANCE_GET_CMD})
          finished=$(echo $res | grep -o '\"finished\":[^,}]*' | grep -o '[^: ]*$')
          draining=$(echo $res | grep -o '\"draining\":[^,}]*' | grep -o '[^: ]*$')
          sleep 0.5
      done

      touch /tmp/preStopHookFinished
    }
    preStopHook
    true
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-config-watcher
  namespace: default
stringData:
  sasl-user.sh: |-
    #!/usr/bin/env bash

    trap 'error_handler $? $LINENO' ERR

    error_handler() {
      echo "Error: ($1) occurred at line $2"
    }

    set -e

    # rpk cluster health can exit non-zero if it's unable to dial brokers. This
    # can happen for many reasons but we never want this script to crash as it
    # would take down yet another broker and make a bad situation worse.
    # Instead, just wait for the command to eventually exit zero.
    echo "Waiting for cluster to be ready"
    until rpk cluster health --watch --exit-when-healthy; do
      echo "rpk cluster health failed. Waiting 5 seconds before trying again..."
      sleep 5
    done
    echo "Nothing to do. Sleeping..."
    sleep infinity
type: Opaque
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configurator
  namespace: default
stringData:
  configurator.sh: |-
    set -xe
    SERVICE_NAME=$1
    KUBERNETES_NODE_NAME=$2
    POD_ORDINAL=${SERVICE_NAME##*-}
    BROKER_INDEX=`expr $POD_ORDINAL + 1`

    CONFIG=/etc/redpanda/redpanda.yaml

    # Setup config files
    cp /tmp/base-config/redpanda.yaml "${CONFIG}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":9093}"
    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[0] "$LISTENER"

    ADVERTISED_KAFKA_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    PREFIX_TEMPLATE=""
    ADVERTISED_KAFKA_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":31092}")

    rpk redpanda config --config "$CONFIG" set redpanda.advertised_kafka_api[1] "${ADVERTISED_KAFKA_ADDRESSES[$POD_ORDINAL]}"

    LISTENER="{\"address\":\"${SERVICE_NAME}.redpanda.default.svc.cluster.local.\",\"name\":\"internal\",\"port\":8082}"
    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[0] "$LISTENER"

    ADVERTISED_HTTP_ADDRESSES=()

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    PREFIX_TEMPLATE=""
    ADVERTISED_HTTP_ADDRESSES+=("{\"address\":\"${SERVICE_NAME}\",\"name\":\"default\",\"port\":30082}")

    rpk redpanda config --config "$CONFIG" set pandaproxy.advertised_pandaproxy_api[1] "${ADVERTISED_HTTP_ADDRESSES[$POD_ORDINAL]}"
type: Opaque
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: v1
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.default.svc.cluster.local.:9093
      - redpanda-1.redpanda.default.svc.cluster.local.:9093
      - redpanda-2.redpanda.default.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          caFilepath: /mnt/cert/schemaregistry/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda-0.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.default.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.default.svc.cluster.local.:8081
      tls:
        caFilepath: /mnt/cert/kafka/default/ca.crt
        certFilepath: ""
        enabled: true
        insecureSkipTlsVerify: false
        keyFilepath: ""
    redpanda:
      adminApi:
        enabled: true
        tls:
          caFilepath: /mnt/cert/adminapi/default/ca.crt
          certFilepath: ""
          enabled: true
          insecureSkipTlsVerify: false
          keyFilepath: ""
        urls:
        - https://redpanda.default.svc.cluster.local.:9644
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  bootstrap.yaml: |-
    audit_enabled: false
    cloud_storage_cache_size: 5368709120
    cloud_storage_enable_remote_read: true
    cloud_storage_enable_remote_write: true
    cloud_storage_enabled: false
    compacted_log_segment_size: 67108864
    default_topic_replications: 3
    enable_rack_awareness: false
    enable_sasl: false
    kafka_connection_rate_limit: 1000
    kafka_enable_authorization: false
    log_segment_size_max: 268435456
    log_segment_size_min: 16777216
    max_compacted_log_segment_size: 536870912
    storage_min_free_bytes: 1073741824
  redpanda.yaml: |-
    config_file: /etc/redpanda/redpanda.yaml
    pandaproxy:
      pandaproxy_api:
      - address: 0.0.0.0
        name: internal
        port: 8082
      - address: 0.0.0.0
        name: default
        port: 8083
      pandaproxy_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    pandaproxy_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
    redpanda:
      admin:
      - address: 0.0.0.0
        name: internal
        port: 9644
      - address: 0.0.0.0
        name: default
        port: 9645
      admin_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      crash_loop_limit: 5
      empty_seed_starts_cluster: false
      kafka_api:
      - address: 0.0.0.0
        name: internal
        port: 9093
      - address: 0.0.0.0
        name: default
        port: 9094
      kafka_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
      rpc_server:
        address: 0.0.0.0
        port: 33145
      rpc_server_tls:
        cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
      - host:
          address: redpanda-0.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-1.redpanda.default.svc.cluster.local.
          port: 33145
      - host:
          address: redpanda-2.redpanda.default.svc.cluster.local.
          port: 33145
    rpk:
      additional_start_flags:
      - --default-log-level=info
      - --memory=2048M
      - --reserve-memory=205M
      - --smp=1
      admin_api:
        addresses:
        - redpanda-0.redpanda.default.svc.cluster.local.:9644
        - redpanda-1.redpanda.default.svc.cluster.local.:9644
        - redpanda-2.redpanda.default.svc.cluster.local.:9644
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      enable_memory_locking: false
      kafka_api:
        brokers:
        - redpanda-0.redpanda.default.svc.cluster.local.:9093
        - redpanda-1.redpanda.default.svc.cluster.local.:9093
        - redpanda-2.redpanda.default.svc.cluster.local.:9093
        tls:
          ca_file: /etc/tls/certs/default/ca.crt
      overprovisioned: false
      tune_aio_events: true
    schema_registry:
      schema_registry_api:
      - address: 0.0.0.0
        name: internal
        port: 8081
      - address: 0.0.0.0
        name: default
        port: 8084
      schema_registry_api_tls:
      - cert_file: /etc/tls/certs/default/tls.crt
        enabled: true
        key_file: /etc/tls/certs/default/tls.key
        name: internal
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      - cert_file: /etc/tls/certs/external/tls.crt
        enabled: true
        key_file: /etc/tls/certs/external/tls.key
        name: default
        require_client_auth: false
        truststore_file: /etc/tls/certs/external/ca.crt
    schema_registry_client:
      broker_tls:
        enabled: true
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      brokers:
      - address: redpanda-0.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-1.redpanda.default.svc.cluster.local.
        port: 9093
      - address: redpanda-2.redpanda.default.svc.cluster.local.
        port: 9093
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
data:
  profile: |-
    admin_api:
      addresses:
      - redpanda-0:31644
      - redpanda-1:31644
      - redpanda-2:31644
      tls:
        ca_file: ca.crt
    kafka_api:
      brokers:
      - redpanda-0:31092
      - redpanda-1:31092
      - redpanda-2:31092
      tls:
        ca_file: ca.crt
    name: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-rpk
  namespace: default
---
# Source: redpanda/charts/console/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 0
  selector:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: console
  type: ClusterIP
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: admin-default
    nodePort: 31644
    port: 9645
    protocol: TCP
    targetPort: 0
  - name: kafka-default
    nodePort: 31092
    port: 9094
    protocol: TCP
    targetPort: 0
  - name: http-default
    nodePort: 30082
    port: 8083
    protocol: TCP
    targetPort: 0
  - name: schema-default
    nodePort: 30081
    port: 8084
    protocol: TCP
    targetPort: 0
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  sessionAffinity: None
  type: NodePort
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
    monitoring.redpanda.com/enabled: "false"
  name: redpanda
  namespace: default
spec:
  clusterIP: None
  ports:
  - appProtocol: null
    name: admin
    port: 9644
    protocol: TCP
    targetPort: 9644
  - name: http
    port: 8082
    protocol: TCP
    targetPort: 8082
  - name: kafka
    port: 9093
    protocol: TCP
    targetPort: 9093
  - name: rpc
    port: 33145
    protocol: TCP
    targetPort: 33145
  - name: schemaregistry
    port: 8081
    protocol: TCP
    targetPort: 8081
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: redpanda-statefulset
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/name: redpanda
  type: ClusterIP
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  name: redpanda-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: console
  strategy: {}
  template:
    metadata:
      annotations:
        checksum-redpanda-chart/config: 502f2d8b8dbc5a51fe7492cd2217ee0bc2ea1660a83dca07f42329157abd7567
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: console
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.filepath=/etc/console/configs/config.yaml
        command: null
        env:
        - name: KAFKA_TLS_CAFILEPATH
          value: /mnt/cert/kafka/default/ca.crt
        - name: KAFKA_SCHEMAREGISTRY_TLS_CAFILEPATH
          value: /mnt/cert/schemaregistry/default/ca.crt
        envFrom: []
        image: docker.redpanda.com/redpandadata/console:v2.7.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: console
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /admin/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/console/configs
          name: configs
          readOnly: true
        - mountPath: /mnt/cert/kafka/default
          name: kafka-default-cert
          readOnly: true
        - mountPath: /mnt/cert/schemaregistry/default
          name: schemaregistry-default-cert
          readOnly: true
        - mountPath: /mnt/cert/adminapi/default
          name: adminapi-default-cert
          readOnly: true
      imagePullSecrets: []
      initContainers: []
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 99
        runAsUser: 99
      serviceAccountName: redpanda-console
      tolerations: []
      topologySpreadConstraints: []
      volumes:
      - configMap:
          name: redpanda-console
        name: configs
      - name: kafka-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: schemaregistry-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
      - name: adminapi-default-cert
        secret:
          defaultMode: 272
          secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: redpanda-statefulset
      app.kubernetes.io/instance: redpanda
      app.kubernetes.io/name: redpanda
  serviceName: redpanda
  template:
    metadata:
      annotations:
        config.redpanda.com/checksum: d696a04723a2d2ab62276a5d6a0edc91462858e405794bedd5051e062efea3c4
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda-statefulset
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redpanda
        helm.sh/chart: redpanda-5.9.6
        redpanda.com/poddisruptionbudget: redpanda
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: redpanda-statefulset
                app.kubernetes.io/instance: redpanda
                app.kubernetes.io/name: redpanda
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - rpk
        - redpanda
        - start
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.default.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/postStart.sh
                true
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                timeout -v 45 bash -x /var/lifecycle/preStop.sh
                true # do not fail and cause the pod to terminate
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt
              "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
        - containerPort: 9644
          name: admin
        - containerPort: 9645
          name: admin-default
        - containerPort: 8082
          name: http
        - containerPort: 8083
          name: http-default
        - containerPort: 9093
          name: kafka
        - containerPort: 9094
          name: kafka-default
        - containerPort: 33145
          name: rpc
        - containerPort: 8081
          name: schemaregistry
        - containerPort: 8084
          name: schema-default
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -x
              RESULT=$(rpk cluster health)
              echo $RESULT
              echo $RESULT | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 0
        resources:
          limits:
            cpu: 1
            memory: 2.5Gi
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k -m 5 --cacert /etc/tls/certs/default/ca.crt "https://${SERVICE_NAME}.redpanda.default.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /var/lifecycle
          name: lifecycle-scripts
        - mountPath: /var/lib/redpanda/data
          name: datadir
      - args:
        - -c
        - trap "exit 0" TERM; exec /etc/secrets/config-watcher/scripts/sasl-user.sh
          & wait $!
        command:
        - /bin/sh
        env: []
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: config-watcher
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /etc/secrets/config-watcher/scripts
          name: redpanda-config-watcher
      imagePullSecrets: null
      initContainers:
      - command:
        - /bin/bash
        - -c
        - rpk redpanda tune all
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: tuning
        resources: {}
        securityContext:
          capabilities:
            add:
            - SYS_RESOURCE
          privileged: true
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: base-config
      - command:
        - /bin/bash
        - -c
        - trap "exit 0" TERM; exec $CONFIGURATOR_SCRIPT "${SERVICE_NAME}" "${KUBERNETES_NODE_NAME}"
          & wait $!
        env:
        - name: CONFIGURATOR_SCRIPT
          value: /etc/secrets/configurator/scripts/configurator.sh
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef: null
            fieldRef:
              fieldPath: metadata.name
            resourceFieldRef: null
            secretKeyRef: null
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: docker.redpanda.com/redpandadata/redpanda:v24.2.5
        name: redpanda-configurator
        resources: {}
        securityContext:
          allowPrivilegeEscalation: null
          runAsGroup: 101
          runAsNonRoot: null
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /etc/redpanda
          name: config
        - mountPath: /tmp/base-config
          name: base-config
        - mountPath: /etc/secrets/configurator/scripts/
          name: redpanda-configurator
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      priorityClassName: ""
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      terminationGracePeriodSeconds: 90
      tolerations: []
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: redpanda-statefulset
            app.kubernetes.io/instance: redpanda
            app.kubernetes.io/name: redpanda
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - name: lifecycle-scripts
        secret:
          defaultMode: 509
          secretName: redpanda-sts-lifecycle
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
      - name: redpanda-configurator
        secret:
          defaultMode: 509
          secretName: redpanda-configurator
      - name: redpanda-config-watcher
        secret:
          defaultMode: 509
          secretName: redpanda-config-watcher
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations: null
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: redpanda
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
    status: {}
---
# Source: redpanda/templates/console/configmap-and-deployment.yaml
# before license changes, this was not printing a secret, so we gather in which case to print
# for now only if we have a license do we print, however, this may be an issue for some
# since if we do include a license we MUST also print all secret items.
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-certificate
  namespace: default
spec:
  commonName: redpanda-default-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-certificate
  namespace: default
spec:
  commonName: redpanda-external-root-certificate
  duration: 43800h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-default-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-default-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-cert
  namespace: default
spec:
  dnsNames:
  - redpanda-cluster.redpanda.default.svc.cluster.local
  - redpanda-cluster.redpanda.default.svc
  - redpanda-cluster.redpanda.default
  - '*.redpanda-cluster.redpanda.default.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.default.svc'
  - '*.redpanda-cluster.redpanda.default'
  - redpanda.default.svc.cluster.local
  - redpanda.default.svc
  - redpanda.default
  - '*.redpanda.default.svc.cluster.local'
  - '*.redpanda.default.svc'
  - '*.redpanda.default'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: redpanda-external-root-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: redpanda-external-cert
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-default-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-default-root-certificate
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-external-root-issuer
  namespace: default
spec:
  ca:
    secretName: redpanda-external-root-certificate
---
# Source: redpanda/charts/console/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "redpanda-console-test-connection"
  namespace: "default"
  labels:
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: console
    app.kubernetes.io/version: v2.7.0
    helm.sh/chart: console-0.7.29
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['redpanda-console:8080']
  restartPolicy: Never
  priorityClassName:
---
# Source: redpanda/templates/entry-point.yaml
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "-5"
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: redpanda
    app.kubernetes.io/instance: redpanda
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redpanda
    helm.sh/chart: redpanda-5.9.6
  name: redpanda-configuration
  namespace: default
spec:
  template:
    metadata:
      annotations: {}
      creationTimestamp: null
      generateName: redpanda-post-
      labels:
        app.kubernetes.io/component: redpanda-post-install
        app.kubernetes.io/instance: redpanda
        app.kubernetes.io/name: redpanda
    spec:
      affinity: {}
      automountServiceAccountToken: false
      containers:
      - command:
        - /redpanda-operator
        - sync-cluster-config
        - --redpanda-yaml
        - /tmp/base-config/redpanda.yaml
        - --bootstrap-yaml
        - /tmp/config/.bootstrap.yaml
        env: []
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: post-install
        resources: {}
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        volumeMounts:
        - mountPath: /etc/tls/certs/default
          name: redpanda-default-cert
        - mountPath: /etc/tls/certs/external
          name: redpanda-external-cert
        - mountPath: /tmp/config
          name: config
        - mountPath: /tmp/base-config
          name: base-config
      imagePullSecrets: null
      initContainers:
      - command:
        - /redpanda-operator
        - envsubst
        - /tmp/base-config/bootstrap.yaml
        - --output
        - /tmp/config/.bootstrap.yaml
        env: null
        image: docker.redpanda.com/redpandadata/redpanda-operator:v2.2.4-24.2.5
        name: bootstrap-yaml-envsubst
        resources:
          limits:
            cpu: 100m
            memory: 25Mi
          requests:
            cpu: 100m
            memory: 25Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /tmp/config/
          name: config
        - mountPath: /tmp/base-config/
          name: base-config
      nodeSelector: {}
      restartPolicy: Never
      securityContext:
        fsGroup: 101
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: default
      tolerations: null
      volumes:
      - name: redpanda-default-cert
        secret:
          defaultMode: 288
          secretName: redpanda-default-cert
      - name: redpanda-external-cert
        secret:
          defaultMode: 288
          secretName: redpanda-external-cert
      - configMap:
          name: redpanda
        name: base-config
      - emptyDir: {}
        name: config
