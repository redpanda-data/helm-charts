# Default values for the Redpanda Operator Helm chart.
# Declare variables to be passed into your templates.

# -- Overrides the `redpanda-operator.name` template.
nameOverride: ""

# -- Overrides the `redpanda-operator.fullname` template.
fullnameOverride: ""

# -- Sets the number of instances of the Redpanda Operator to deploy.
# Each instance is deployed as a Pod. All instances are managed by a Deployment resource.
replicaCount: 1

# -- Sets the Kubernetes cluster domain.
clusterDomain: cluster.local

# -- Container image settings.
image:
  # -- Sets the repository from which to pull the `redpanda-operator` image.
  repository: docker.redpanda.com/redpandadata/redpanda-operator
  # -- Sets the image version.
  # See DockerHub for [all stable versions](https://hub.docker.com/r/redpandadata/redpanda-operator/tags).
  # @default -- `Chart.appVersion`.
  # tag:
  # -- Sets the `pullPolicy` for the `redpanda-operator` image.
  pullPolicy: IfNotPresent

# -- Configuration for the `kube-rbac-proxy`, a component that provides an HTTP proxy to perform authorization checks.
kubeRbacProxy:
  # -- Sets log level for kube rbac proxy
  logLevel: 10
  # -- Sets settings for pulling the `kube-rbac-proxy` image.
  image:
    # -- Sets the repository in which the `kube-rbac-proxy` image is available.
    repository: gcr.io/kubebuilder/kube-rbac-proxy
    # -- Sets the `kube-rbac-proxy` image tag.
    tag: v0.14.0
    # -- Sets the `pullPolicy` for `kube-rbac-proxy` image
    pullPolicy: IfNotPresent

# -- Configuration for the Redpanda configurator, a component for managing Redpanda configuration.
configurator:
  # -- Sets the repository in which the Redpanda configurator image is available.
  repository: docker.redpanda.com/redpandadata/configurator
  # -- Sets the Redpanda configurator image tag. Uncomment and set a value to use a specific version.
  # tag:
  # -- Sets the `pullPolicy` for the Redpanda configurator image.
  pullPolicy: IfNotPresent

# -- Configuration for the Kubernetes Controller Manager used by Redpanda Operator.
# The Controller Manager is a component of the Kubernetes control plane that runs controller processes. These controllers are background threads that handle the orchestration and operational logic of Kubernetes, ensuring the desired state of the cluster matches the observed state.
config:
  apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
  kind: ControllerManagerConfig
  # -- Configuration for health checking.
  health:
    # -- Sets the address for the health probe server to listen on.
    healthProbeBindAddress: :8081
  # -- Configuration for the metrics endpoint.
  metrics:
    # -- Sets the address for the metrics server to bind to.
    bindAddress: 127.0.0.1:8080
  # -- Configuration for webhooks, such as the port they listen on. Webhooks are HTTP callbacks that receive and process data in response to events.
  webhook:
    # -- Sets the port for the webhook server to listen on.
    port: 9443
  # -- Configuration for leader election, which is a process that ensures only one instance of the controller manager is active at a time. This is critical for high availability and to prevent split-brain scenarios in a distributed system.
  leaderElection:
    # -- Enables leader election.
    leaderElect: true
    # -- Sets the name of the resource lock for the leader election process.
    resourceName: aa9fc693.vectorized.io

# -- Pull secrets may be used to provide credentials to image repositories
# See the [Kubernetes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/).
imagePullSecrets: []

# -- Log level
# Valid values (from least to most verbose) are: `warn`, `info`, `debug`, and `trace`.
logLevel: "info"

# -- Role-based Access Control (RBAC) configuration for the Redpanda Operator.
rbac:
  # -- Enables the creation of additional RBAC roles.
  create: true
  # -- Creates additional RBAC cluster roles that are
  # needed to run additional controllers using `additionalCmdFlags`.
  createAdditionalControllerCRs: false
  # -- Create RBAC cluster roles needed for the Redpanda Helm chart's 'rbac.enabled' feature.
  createRPKBundleCRs: false

# -- Specifies whether to create Webhook resources both to intercept and potentially modify or reject Kubernetes API requests as well as authenticate requests to the Kubernetes API. Only valid when `scope` is set to Cluster.
webhook:
  # -- Creates the Webhook resources.
  enabled: false

# -- Service account management.
serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- Specifies whether a service account should automount API-Credentials. The token is used in sidecars.controllers
  automountServiceAccountToken: false
  # -- The name of the service account to use.
  # If not set and `serviceAccount.create` is `true`,
  # a name is generated using the `redpanda-operator.fullname` template.
  # name:

# -- Sets resources requests/limits for Redpanda Operator Pods.
# By default requests and limits are not set to increase the chances that the charts run on environments with few
# resources, such as Minikube. To specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after `resources`.
resources: {}
#  limits:
#   cpu: 100m
#   memory: 30Mi
#  requests:
#   cpu: 100m
#   memory: 20Mi

# -- Node selection constraints for scheduling Pods on specific nodes.
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector).
nodeSelector: {}
# -- Taints to be tolerated by Pods.
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/).
tolerations: []
# -- Sets affinity constraints for scheduling Pods that run the Redpanda Operator.
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity).
affinity: {}

# -- Sets deployment strategy.
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).
# strategy: ""

# Sets additional annotations for Pods.
podAnnotations: {}
# Adds additional labels to Pods.
podLabels: {}

# -- Passes additional flags to the Redpanda Operator at startup.
# Additional flags include:
#
# - `--additional-controllers`: Additional controllers to deploy. Valid values are nodeWatcher or decommission. For more information about the Nodewatcher controller, see [Install the Nodewatcher controller](https://docs.redpanda.com/current/manage/kubernetes/k-scale-redpanda/#node-pvc). For more information about the Decommission controller, see [Use the Decommission controller](https://docs.redpanda.com/current/manage/kubernetes/k-decommission-brokers/#Automated).
additionalCmdFlags: []
# - --additional-controllers="<controller-name"

# -- Additional labels to add to all Kubernetes objects.
# For example, `my.k8s.service: redpanda-operator`.
commonLabels: {}

# -- Configuration for monitoring.
monitoring:
  # -- Creates a ServiceMonitor that can be used by Prometheus-Operator or VictoriaMetrics-Operator to scrape the metrics.
  enabled: false
  # -- Deploys the [Prometheus community Helm chart](https://prometheus-community.github.io/helm-charts/).
  deployPrometheusKubeStack: false

# Sets the name of the Secret in which to store the self-signed TLS certificate for the Webhooks when `webhook.enabled` is `true`.
webhookSecretName: webhook-server-cert

# -- Sets almost all fields of operator Deployment PodTemplate
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-template-v1/#PodTemplateSpec).
podTemplate:
  metadata: {}
    # -- Additional labels to apply to the Pods of the StatefulSet.
    # labels: {}
    # -- Additional annotations to apply to the Pods of the StatefulSet.
    # annotations: {}
  # -- A subset of Kubernetes' PodSpec type that will be merged into the
  # final PodSpec. See [Merge Semantics](#merging-semantics) for details.
  spec:
    securityContext:
      runAsUser: 65532
    containers:
      - name: manager
        resources: {}
        # securityContext: {}
        # env: []

# -- Sets operator container security context
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1).
# operatorSecurityContext:

# -- Sets operator container liveness probe various durations
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Probe).
# livenessProbe:

# -- Sets operator container readiness probe various durations
# For details,
# see the [Kubernetes documentation](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#Probe).
# readinessProbe:

# -- Sets the scope of the Redpanda Operator.
# Valid values are `Cluster` or `Namespace`.
# The Cluster scope is deprecated because it deploys the deprecated version of the Redpanda Operator. Use the default Namespace scope. In the Namespace scope, the Redpanda Operator manages Redpanda resources that are deployed in the same namespace as itself.
scope: Namespace
