#!/bin/bash

set -xeuo pipefail

# do not run this during the pipeline upload
if [ "$BUILDKITE_LABEL" == ":pipeline:" ]; then
    exit 0
fi

echo "Testing ${CLOUD_PROVIDER}"

mkdir -p .local/bin
PATH="$(realpath .local/bin):${PATH}"
CLUSTER_BASE_NAME="buildkite-${BUILDKITE_BUILD_NUMBER}"

# dump the kind state on exit
kind_dump() {
    local DUMP="/tmp/kind-${BUILDKITE_BUILD_NUMBER}"
    local TAR="${DUMP}.tar.gz"
    unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY
    kind export logs -n bootstrap "${DUMP}"
    tar czf "${TAR}" -C "${DUMP}" .
    buildkite-agent artifact upload "${TAR}"
}

# install task
curl -Ls https://github.com/go-task/task/releases/download/v3.24.0/task_linux_amd64.tar.gz | tar xzv -C .local/bin task

task --parallel tool:kind tool:helm tool:kubectl tool:ct tool:aws tool:support-bundle

test_eks() {
    AWS_ACCESS_KEY_ID="$HELMCHART_TEST_ACCOUNT_AWS_ACCESS_KEY_ID"
    AWS_SECRET_ACCESS_KEY="$HELMCHART_TEST_ACCOUNT_AWS_SECRET_ACCESS_KEY"
    AWS_REGION=us-west-2
    TEST_BUCKET="cloud-sandbox-buildkite-${BUILDKITE_BUILD_NUMBER}"
    export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_REGION TEST_BUCKET


    # create s3 bucket for tiered storage
    aws s3api create-bucket --bucket "${TEST_BUCKET}" \
        --region "${AWS_REGION}" --create-bucket-configuration "LocationConstraint=${AWS_REGION}"\
        --object-ownership BucketOwnerEnforced

    trap kind_dump EXIT

    # create eks cluster
    # this is very expensive (about an hour). Add new commands above this, not after.
    task capi-create-eks CLUSTER_NAME="buildkite-${BUILDKITE_BUILD_NUMBER}"

    KUBECONFIG=.local/kubeconfig clusterctl get kubeconfig "buildkite-${BUILDKITE_BUILD_NUMBER}-eks-cluster" > ".local/buildkite-${BUILDKITE_BUILD_NUMBER}-eks-cluster.conf"
    KUBECONFIG=$(realpath ".local/buildkite-${BUILDKITE_BUILD_NUMBER}-eks-cluster.conf")
    export KUBECONFIG
}

test_"${CLOUD_PROVIDER}"

# install cert-manager
task install-cert-manager
